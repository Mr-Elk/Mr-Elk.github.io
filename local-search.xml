<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>408 操作系统 V.输入/输出(I/O)管理</title>
    <link href="/2022/01/26/408-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-V-%E8%BE%93%E5%85%A5-%E8%BE%93%E5%87%BA-I-O-%E7%AE%A1%E7%90%86/"/>
    <url>/2022/01/26/408-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-V-%E8%BE%93%E5%85%A5-%E8%BE%93%E5%87%BA-I-O-%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408 操作系统 IV.文件管理</title>
    <link href="/2022/01/26/408-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-IV-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <url>/2022/01/26/408-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-IV-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408 操作系统 III.内存管理</title>
    <link href="/2022/01/26/408-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-III-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <url>/2022/01/26/408-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-III-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408 操作系统 II.进程与线程</title>
    <link href="/2022/01/26/408-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-II-%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/"/>
    <url>/2022/01/26/408-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-II-%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h1><h3 id="操作系统的基本概念"><a href="#操作系统的基本概念" class="headerlink" title="操作系统的基本概念"></a>操作系统的基本概念</h3><ul><li>操作系统的概念</li><li>操作系统的特征</li><li>操作系统的目标和功能</li></ul><h3 id="操作系统发展历史"><a href="#操作系统发展历史" class="headerlink" title="操作系统发展历史"></a>操作系统发展历史</h3><ul><li>手工操作阶段   (此时无操作系统)</li><li>批处理阶段       (操作系统开始出现)</li><li>分时操作系统</li><li>实时操作系统</li><li>网络操作系统和分布式计算机系统</li><li>个人计算机操作系统</li></ul><h3 id="操作系统运行环境"><a href="#操作系统运行环境" class="headerlink" title="操作系统运行环境"></a>操作系统运行环境</h3><ul><li>处理器运行模式</li><li>中断和异常的概念</li><li>系统调用</li></ul><h3 id="操作系统结构"><a href="#操作系统结构" class="headerlink" title="操作系统结构"></a>操作系统结构</h3><h3 id="操作系统引导"><a href="#操作系统引导" class="headerlink" title="操作系统引导"></a>操作系统引导</h3><h3 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h3>]]></content>
    
    
    <categories>
      
      <category>408</category>
      
      <category>操作系统</category>
      
    </categories>
    
    
    <tags>
      
      <tag>408</tag>
      
      <tag>OS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>408 操作系统 I.计算机系统概述</title>
    <link href="/2022/01/26/408-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-I-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
    <url>/2022/01/26/408-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-I-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机系统概述"><a href="#计算机系统概述" class="headerlink" title="计算机系统概述"></a>计算机系统概述</h1><h3 id="操作系统的基本概念"><a href="#操作系统的基本概念" class="headerlink" title="操作系统的基本概念"></a>操作系统的基本概念</h3><ul><li><p>操作系统的概念</p><ul><li>地位: 软件的核心</li><li>计算机系统的组成(自下而上): 硬件, 操作系统, 应用程序, 用户 </li><li>作用: 管理各种计算机硬件, 为应用程序提供基础, 并充当用户和计算机之间的媒介<ul><li>PS: 硬件设备 提供基本的计算资源;  应用程序规定按何种方式使用这些资源解决用户的问题</li></ul></li><li>概念总结: Opearating System <ul><li>是指控制和管理整个计算机系统的硬件与软件资源, 合理的组织, 调度计算机的工作与资源的分配, 进而为用户和其他软件提供方便接口与环境的程序集合</li><li>是计算机系统中最基本的系统软件</li></ul></li></ul></li><li><p>操作系统的特征</p><ul><li>并发<ul><li>并发 VS 并行<ul><li>并发 = 两个或者多个事件在同一时间间隔内发生; 操作系统的并发性指的是计算机系统中同时存在多个运行的程序</li><li>并行 = 系统具有同时运算或者操作的特性 [需要相关硬件支持]</li></ul></li></ul></li><li>共享<ul><li>资源共享  [操作系统中的资源可供内存中多个并发执行的进程共同使用]</li><li>资源共享的方式<ul><li>互斥共享方式   [资源可供多个进程使用, 但是一次只能被一个进程使用]</li><li>同时访问方式   [资源可供多个进程”同时”使用, 这个”同时”是宏观的]</li></ul></li></ul></li><li>虚拟</li><li>异步</li></ul><blockquote><p>并发和共享是操作系统的两个最基本特征; 两者互为存在条件</p></blockquote></li><li><p>操作系统的目标和功能</p></li></ul><h3 id="操作系统发展历史"><a href="#操作系统发展历史" class="headerlink" title="操作系统发展历史"></a>操作系统发展历史</h3><ul><li>手工操作阶段   (此时无操作系统)</li><li>批处理阶段       (操作系统开始出现)</li><li>分时操作系统</li><li>实时操作系统</li><li>网络操作系统和分布式计算机系统</li><li>个人计算机操作系统</li></ul><h3 id="操作系统运行环境"><a href="#操作系统运行环境" class="headerlink" title="操作系统运行环境"></a>操作系统运行环境</h3><ul><li>处理器运行模式</li><li>中断和异常的概念</li><li>系统调用</li></ul><h3 id="操作系统结构"><a href="#操作系统结构" class="headerlink" title="操作系统结构"></a>操作系统结构</h3><h3 id="操作系统引导"><a href="#操作系统引导" class="headerlink" title="操作系统引导"></a>操作系统引导</h3><h3 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h3>]]></content>
    
    
    <categories>
      
      <category>408</category>
      
      <category>操作系统</category>
      
    </categories>
    
    
    <tags>
      
      <tag>408</tag>
      
      <tag>OS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 APPENDIX 机器学习附录</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-APPENDIX-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%99%84%E5%BD%95/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-APPENDIX-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%99%84%E5%BD%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 XXII 无监督学习方法总结</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XXII-%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XXII-%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 XXI PageRank算法</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XXI-PageRank%E7%AE%97%E6%B3%95/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XXI-PageRank%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 XX 潜在迪利克雷分配</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XX-%E6%BD%9C%E5%9C%A8%E8%BF%AA%E5%88%A9%E5%85%8B%E9%9B%B7%E5%88%86%E9%85%8D/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XX-%E6%BD%9C%E5%9C%A8%E8%BF%AA%E5%88%A9%E5%85%8B%E9%9B%B7%E5%88%86%E9%85%8D/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 IXX 马尔可夫链蒙特卡罗方法</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-IXX-%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E9%93%BE%E8%92%99%E7%89%B9%E5%8D%A1%E7%BD%97%E6%96%B9%E6%B3%95/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-IXX-%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E9%93%BE%E8%92%99%E7%89%B9%E5%8D%A1%E7%BD%97%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 XVIII 概率潜在语义分析</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XVIII-%E6%A6%82%E7%8E%87%E6%BD%9C%E5%9C%A8%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XVIII-%E6%A6%82%E7%8E%87%E6%BD%9C%E5%9C%A8%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 XVII 潜在语义分析</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XVII-%E6%BD%9C%E5%9C%A8%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XVII-%E6%BD%9C%E5%9C%A8%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 XVI 主成分分析</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XVI-%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XVI-%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 XV 奇异值分解</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XV-%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XV-%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 IXV 聚类方法</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-IXV-%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-IXV-%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 XIII 无监督学习概论</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XIII-%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XIII-%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 XII 监督学习方法总结</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XII-%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XII-%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 XI 条件随机场</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XI-%E6%9D%A1%E4%BB%B6%E9%9A%8F%E6%9C%BA%E5%9C%BA/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-XI-%E6%9D%A1%E4%BB%B6%E9%9A%8F%E6%9C%BA%E5%9C%BA/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 X 隐马尔科夫模型</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-X-%E9%9A%90%E9%A9%AC%E5%B0%94%E7%A7%91%E5%A4%AB%E6%A8%A1%E5%9E%8B/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-X-%E9%9A%90%E9%A9%AC%E5%B0%94%E7%A7%91%E5%A4%AB%E6%A8%A1%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="隐马尔科夫模型"><a href="#隐马尔科夫模型" class="headerlink" title="隐马尔科夫模型"></a>隐马尔科夫模型</h1><h3 id="1-隐马尔科夫模型的基本概念"><a href="#1-隐马尔科夫模型的基本概念" class="headerlink" title="1. 隐马尔科夫模型的基本概念"></a>1. 隐马尔科夫模型的基本概念</h3><ul><li>隐马尔科夫模型的定义</li><li>观测序列的生成过程</li><li>隐马尔科夫模型的三个基本问题</li></ul><h3 id="2-概率计算算法"><a href="#2-概率计算算法" class="headerlink" title="2. 概率计算算法"></a>2. 概率计算算法</h3><ul><li>直接计算法</li><li>前向算法</li><li>后向算法</li><li>一些概率与期望值的计算</li></ul><h3 id="3-学习算法"><a href="#3-学习算法" class="headerlink" title="3. 学习算法"></a>3. 学习算法</h3><ul><li>监督学习方法</li><li>Baum-Welch算法</li><li>Baum-Welch模型参数估计公式</li></ul><h3 id="4-预测算法"><a href="#4-预测算法" class="headerlink" title="4. 预测算法"></a>4. 预测算法</h3><ul><li>近似算法</li><li>维特比算法</li></ul>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>统计学习方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
      <tag>Statistics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 IX EM算法机器推广</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-IX-EM%E7%AE%97%E6%B3%95%E6%9C%BA%E5%99%A8%E6%8E%A8%E5%B9%BF/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-IX-EM%E7%AE%97%E6%B3%95%E6%9C%BA%E5%99%A8%E6%8E%A8%E5%B9%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="EM算法及其推广"><a href="#EM算法及其推广" class="headerlink" title="EM算法及其推广"></a>EM算法及其推广</h1><h3 id="1-EM算法的引入"><a href="#1-EM算法的引入" class="headerlink" title="1. EM算法的引入"></a>1. EM算法的引入</h3><ul><li>EM算法</li><li>EM算法的导出</li><li>EM算法在无监督学习中的应用</li></ul><h3 id="2-EM算法的收敛性"><a href="#2-EM算法的收敛性" class="headerlink" title="2. EM算法的收敛性"></a>2. EM算法的收敛性</h3><h3 id="3-EM算法在高斯混合模型学习中的应用"><a href="#3-EM算法在高斯混合模型学习中的应用" class="headerlink" title="3. EM算法在高斯混合模型学习中的应用"></a>3. EM算法在高斯混合模型学习中的应用</h3><ul><li>高斯混合模型</li><li>高斯混合模型参数估计的EM算法</li></ul><h3 id="4-EM算法推广"><a href="#4-EM算法推广" class="headerlink" title="4. EM算法推广"></a>4. EM算法推广</h3><ul><li>F函数的极大-极大算法</li><li>GEM算法</li></ul>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>统计学习方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
      <tag>Statistics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 VIII 提升方法</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-VIII-%E6%8F%90%E5%8D%87%E6%96%B9%E6%B3%95/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-VIII-%E6%8F%90%E5%8D%87%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="提升方法"><a href="#提升方法" class="headerlink" title="提升方法"></a>提升方法</h1><h3 id="1-提升方法AdaBoost算法"><a href="#1-提升方法AdaBoost算法" class="headerlink" title="1. 提升方法AdaBoost算法"></a>1. 提升方法AdaBoost算法</h3><ul><li>提升方法的基本思路</li><li>AdaBoost 算法</li><li>AdaBoost 的例子</li></ul><h3 id="2-AdaBoost算法的训练误差分析"><a href="#2-AdaBoost算法的训练误差分析" class="headerlink" title="2. AdaBoost算法的训练误差分析"></a>2. AdaBoost算法的训练误差分析</h3><h3 id="3-AdaBoost算法的解释"><a href="#3-AdaBoost算法的解释" class="headerlink" title="3. AdaBoost算法的解释"></a>3. AdaBoost算法的解释</h3><ul><li>前向分步算法</li><li>前向分步算法与AdaBoost</li></ul><h3 id="4-提升树"><a href="#4-提升树" class="headerlink" title="4. 提升树"></a>4. 提升树</h3><ul><li>提升树模型</li><li>提升树算法</li><li>梯度提升</li></ul>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>统计学习方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
      <tag>Statistics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 VII 支持向量机</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-VII-%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-VII-%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="支持向量机"><a href="#支持向量机" class="headerlink" title="支持向量机"></a>支持向量机</h1><h3 id="1-线性可分支持向量机与硬间隔最大化"><a href="#1-线性可分支持向量机与硬间隔最大化" class="headerlink" title="1. 线性可分支持向量机与硬间隔最大化"></a>1. 线性可分支持向量机与硬间隔最大化</h3><ul><li>线性可分支持向量机</li><li>函数间隔和几何间隔</li><li>间隔最大化</li><li>学习的对偶算法</li></ul><h3 id="2-线性支持向量机与软间隔最大化"><a href="#2-线性支持向量机与软间隔最大化" class="headerlink" title="2. 线性支持向量机与软间隔最大化"></a>2. 线性支持向量机与软间隔最大化</h3><ul><li>线性支持向量机</li><li>学习的对偶算法</li><li>支持向量</li><li>合页损失函数</li></ul><h3 id="3-非线性支持向量机与核函数"><a href="#3-非线性支持向量机与核函数" class="headerlink" title="3. 非线性支持向量机与核函数"></a>3. 非线性支持向量机与核函数</h3><ul><li>核技巧</li><li>正定核</li><li>常用核函数</li><li>非线性支持向量分类机</li></ul><h3 id="4-序列最小最优化算法"><a href="#4-序列最小最优化算法" class="headerlink" title="4. 序列最小最优化算法"></a>4. 序列最小最优化算法</h3><ul><li>两个变量二次规划的求解方法</li><li>变量的选择方法</li><li>SMO算法</li></ul>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>统计学习方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
      <tag>Statistics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 VI 逻辑斯蒂回归与最大熵模型</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-VI-%E9%80%BB%E8%BE%91%E6%96%AF%E8%92%82%E5%9B%9E%E5%BD%92%E4%B8%8E%E6%9C%80%E5%A4%A7%E7%86%B5%E6%A8%A1%E5%9E%8B/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-VI-%E9%80%BB%E8%BE%91%E6%96%AF%E8%92%82%E5%9B%9E%E5%BD%92%E4%B8%8E%E6%9C%80%E5%A4%A7%E7%86%B5%E6%A8%A1%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="逻辑斯蒂回归与最大熵模型"><a href="#逻辑斯蒂回归与最大熵模型" class="headerlink" title="逻辑斯蒂回归与最大熵模型"></a>逻辑斯蒂回归与最大熵模型</h1><h3 id="1-逻辑斯蒂回归模型"><a href="#1-逻辑斯蒂回归模型" class="headerlink" title="1. 逻辑斯蒂回归模型"></a>1. 逻辑斯蒂回归模型</h3><ul><li>逻辑斯蒂分布</li><li>二项逻辑斯蒂回归模型</li><li>模型参数估计</li><li>多项逻辑斯蒂回归</li></ul><h3 id="2-最大熵模型"><a href="#2-最大熵模型" class="headerlink" title="2. 最大熵模型"></a>2. 最大熵模型</h3><ul><li>最大熵原理</li><li>最大熵模型的定义</li><li>最大熵模型的学习</li><li>极大似然估计</li></ul><h3 id="3-模型学习的最优化算法"><a href="#3-模型学习的最优化算法" class="headerlink" title="3. 模型学习的最优化算法"></a>3. 模型学习的最优化算法</h3><ul><li>改进的迭代尺度法</li><li>拟牛顿法</li></ul>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>统计学习方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
      <tag>Statistics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 V 决策树</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-V-%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-V-%E5%86%B3%E7%AD%96%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<h1 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h1><h3 id="1-决策树模型与学习"><a href="#1-决策树模型与学习" class="headerlink" title="1. 决策树模型与学习"></a>1. 决策树模型与学习</h3><ul><li>决策树模型</li><li>决策树与if-then 规则</li><li>决策树与条件概率分布</li><li>决策树学习</li></ul><h3 id="2-特征选择"><a href="#2-特征选择" class="headerlink" title="2. 特征选择"></a>2. 特征选择</h3><ul><li>特征选择问题</li><li>信息增益</li><li>信益增益比</li></ul><h3 id="3-决策树的生成"><a href="#3-决策树的生成" class="headerlink" title="3. 决策树的生成"></a>3. 决策树的生成</h3><ul><li>ID3算法</li><li>C4.5算法</li></ul><h3 id="4-决策树的剪枝"><a href="#4-决策树的剪枝" class="headerlink" title="4. 决策树的剪枝"></a>4. 决策树的剪枝</h3><h3 id="5-CART算法"><a href="#5-CART算法" class="headerlink" title="5. CART算法"></a>5. CART算法</h3><ul><li>CART 生成</li><li>CART 剪枝</li></ul>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>统计学习方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
      <tag>Statistics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 IV 朴素贝叶斯法</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-IV-%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E6%B3%95/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-IV-%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="朴素贝叶斯法"><a href="#朴素贝叶斯法" class="headerlink" title="朴素贝叶斯法"></a>朴素贝叶斯法</h1><h3 id="1-朴素贝叶斯法的学习和分类"><a href="#1-朴素贝叶斯法的学习和分类" class="headerlink" title="1. 朴素贝叶斯法的学习和分类"></a>1. 朴素贝叶斯法的学习和分类</h3><ul><li>基本方法</li><li>后验概率最大化的含义</li></ul><h3 id="2-朴素贝叶斯法的参数估计"><a href="#2-朴素贝叶斯法的参数估计" class="headerlink" title="2. 朴素贝叶斯法的参数估计"></a>2. 朴素贝叶斯法的参数估计</h3><ul><li>最大似然估计</li><li>学习与分类算法</li><li>贝叶斯估计</li></ul>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>统计学习方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
      <tag>Statistics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 III K近邻法</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-III-K%E8%BF%91%E9%82%BB%E6%B3%95/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-III-K%E8%BF%91%E9%82%BB%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="K近邻法"><a href="#K近邻法" class="headerlink" title="K近邻法"></a>K近邻法</h1><h3 id="1-K近邻算法"><a href="#1-K近邻算法" class="headerlink" title="1. K近邻算法"></a>1. K近邻算法</h3><h3 id="2-K近邻模型"><a href="#2-K近邻模型" class="headerlink" title="2. K近邻模型"></a>2. K近邻模型</h3><ul><li>模型</li><li>距离度量</li><li>k值的选择</li><li>分类决策规则</li></ul><h3 id="3-K近邻法的实现-kd树"><a href="#3-K近邻法的实现-kd树" class="headerlink" title="3. K近邻法的实现: kd树"></a>3. K近邻法的实现: kd树</h3><ul><li>构造kd树</li><li>搜索kd树</li></ul>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>统计学习方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
      <tag>Statistics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 II 感知机</title>
    <link href="/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-II-%E6%84%9F%E7%9F%A5%E6%9C%BA/"/>
    <url>/2022/01/25/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-II-%E6%84%9F%E7%9F%A5%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="感知机"><a href="#感知机" class="headerlink" title="感知机"></a>感知机</h1><h3 id="1-感知机模型"><a href="#1-感知机模型" class="headerlink" title="1. 感知机模型"></a>1. 感知机模型</h3><h3 id="2-感知机学习策略"><a href="#2-感知机学习策略" class="headerlink" title="2. 感知机学习策略"></a>2. 感知机学习策略</h3><ul><li>数据集的线性可分性</li><li>感知机的学习策略</li></ul><h3 id="3-感知机学习算法"><a href="#3-感知机学习算法" class="headerlink" title="3. 感知机学习算法"></a>3. 感知机学习算法</h3><ul><li>感知机学习算法的原始形式</li><li>算法的收敛性</li><li>感知机学习算法的对偶形式</li></ul>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>统计学习方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
      <tag>Statistics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>左程云 阶段一 算法数据结构 01 认识复杂度，对数器，二分法与异或</title>
    <link href="/2022/01/24/%E5%B7%A6%E7%A8%8B%E4%BA%91-%E9%98%B6%E6%AE%B5%E4%B8%80-%E7%AE%97%E6%B3%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-01-%E8%AE%A4%E8%AF%86%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%8C%E5%AF%B9%E6%95%B0%E5%99%A8%EF%BC%8C%E4%BA%8C%E5%88%86%E6%B3%95%E4%B8%8E%E5%BC%82%E6%88%96/"/>
    <url>/2022/01/24/%E5%B7%A6%E7%A8%8B%E4%BA%91-%E9%98%B6%E6%AE%B5%E4%B8%80-%E7%AE%97%E6%B3%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-01-%E8%AE%A4%E8%AF%86%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%8C%E5%AF%B9%E6%95%B0%E5%99%A8%EF%BC%8C%E4%BA%8C%E5%88%86%E6%B3%95%E4%B8%8E%E5%BC%82%E6%88%96/</url>
    
    <content type="html"><![CDATA[<h1 id="复杂度-对数器-二分法-异或"><a href="#复杂度-对数器-二分法-异或" class="headerlink" title="复杂度, 对数器, 二分法, 异或"></a>复杂度, 对数器, 二分法, 异或</h1><h3 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h3><ul><li><p>引入</p><ul><li>常数操作<ul><li>举例: 无溢出的四则运算  |  数组寻址(对比linked list)</li></ul></li><li>固定时间的操作</li></ul></li><li><p>关于复杂度</p><ul><li>写出运算次数的多项式, 去除系数部分的最高阶多项式即为复杂度</li><li>使用最差的情况来估计流程</li></ul></li><li><p>复杂度的比较</p><ul><li><p>复杂度不同</p><ul><li><p>O(1)</p></li><li><p>O(logn)</p></li><li><p>O(n)</p></li><li><p>O(nlogn)</p></li><li><p>O(n<sup>2</sup>)</p></li><li><p>O(n<sup>3</sup>)</p></li><li><p>O(2<sup>n</sup>)</p></li><li><p>O(n!)</p></li></ul></li><li><p>复杂度相同比较系数</p><ul><li>实际跑比较即可</li></ul></li></ul></li><li><p>额外空间复杂度</p><ul><li>按最差的情况估计</li><li>额外开辟的空间</li></ul></li><li><p>最优解</p><ul><li>时间复杂度尽可能低</li><li>再保证空间复杂度最少</li></ul></li></ul><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><ul><li><p>思想: 选出最值, 插到指定位置元素的操作  {补充: 不能减少操作数, 恒定要计算那么多次}</p></li><li><p>具体操作</p><ul><li>0 ~ N-1 找最值, 比较N-1次; 最值放在第一个位置</li><li>1 ~ N-1 找最值, 比较N-2次; 最值放在第二个位置… 直到还剩最后一个元素</li></ul></li><li><p>复杂度 O(n<sup>2</sup>)</p></li><li><p>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">selectsort</span><span class="hljs-params">(<span class="hljs-keyword">int</span>* arr)</span></span>&#123;<br><span class="hljs-keyword">if</span>(arr ==NULL || arr.length() &lt; <span class="hljs-number">2</span>) <br><span class="hljs-keyword">return</span>;<br><br><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length();i ++)&#123;<br><span class="hljs-keyword">int</span> minnum = i;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = i+<span class="hljs-number">1</span>; j &lt; arr.lengyh(); j ++)&#123;<br><br>minnum = arr[j] &lt; arr[minnum] ? j,minnum<br>&#125;<br>swap(arr[i], arr[minnum]);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">selectionSort</span>(<span class="hljs-params">arr</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (arr == <span class="hljs-literal">null</span> || arr.length &lt; <span class="hljs-number">2</span>)&#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; arr.length - <span class="hljs-number">1</span>; i++)&#123;<br>        <span class="hljs-keyword">let</span> minIndex = arr[i];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = i + <span class="hljs-number">1</span>; j &lt; arr.length; j++)&#123;<br>            minIndex = arr[j] &lt; arr[minIndex] ? j : minIndex<br>        &#125;<br>        swap(arr, i, minIndex);<br>    &#125;<br>    <span class="hljs-keyword">return</span> arr<br>&#125;;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i, j</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> tmp = arr[i];<br>    arr[i] = arr[j];<br>    arr[j] = tmp;<br>&#125;;<br><span class="hljs-keyword">let</span> array = [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>];<br><span class="hljs-built_in">console</span>.log(selectionSort(array))<br></code></pre></td></tr></table></figure></li></ul><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><ul><li><p>思想</p><ul><li>从左到右比较相邻两数的位置, 如果顺序不对,则交换, 这样进行到最后, 最右侧数据的值是最值</li><li>冒泡数据的复杂度不受数据情况影响, 不同于 插入排序</li></ul></li><li><p>具体操作</p><ul><li>从 0 ~ N-1 进行两两相邻的逐个比较, 直到最右侧完全排序完成</li><li>接着进行0 ~ N-2 部分的交换, 以此类推, 直到还剩最后一个</li><li></li></ul></li><li><p>复杂度  O(n<sup>2</sup>)</p></li><li><p>代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bubbleSorting</span>(<span class="hljs-params">arr</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (arr == <span class="hljs-literal">null</span> || arr.length &lt; <span class="hljs-number">2</span>)&#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = arr.length - <span class="hljs-number">1</span>; i &gt; <span class="hljs-number">0</span>; i--)&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; i; j++)&#123;<br>            <span class="hljs-keyword">if</span> (arr[j] &gt; arr[j + <span class="hljs-number">1</span>])&#123;<br>                swap(arr,j, j + <span class="hljs-number">1</span>)<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> arr<br>&#125;<br><span class="hljs-comment">// 交换arr的i和j位置上的值</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">swap</span>(<span class="hljs-params">arr,i, j</span>) </span>&#123;<br>    arr[i] = arr[i] ^ arr[j];<br>    arr[j] = arr[i] ^ arr[j];<br>    arr[i] = arr[i] ^ arr[j];<br>&#125;;<br><span class="hljs-keyword">let</span> array = [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>,<span class="hljs-number">3</span>];<br><span class="hljs-built_in">console</span>.log(bubbleSorting(array))<br></code></pre></td></tr></table></figure><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs prolog">  <span class="hljs-string">``</span><span class="hljs-string">`</span><br><span class="hljs-string"></span><br><span class="hljs-string">  </span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">### 插入排序</span><br><span class="hljs-string"></span><br><span class="hljs-string">* 思想</span><br><span class="hljs-string"></span><br><span class="hljs-string">  * 从局部开始, 到全局有序</span><br><span class="hljs-string">  * PS: 实际上的操作数是比较优秀的, 很多步骤不是必须的</span><br><span class="hljs-string"></span><br><span class="hljs-string">* 具体过程</span><br><span class="hljs-string"></span><br><span class="hljs-string">  * 最左边开始, 有序</span><br><span class="hljs-string">  * 左一, 左二, 进行排序; 接着左三插入到合适的位置....直到最后一个数完成插入排序</span><br><span class="hljs-string"></span><br><span class="hljs-string">* 复杂度</span><br><span class="hljs-string"></span><br><span class="hljs-string">  * 复杂度  O(n&lt;sup&gt;2&lt;/sup&gt;)</span><br><span class="hljs-string"></span><br><span class="hljs-string">* 代码</span><br><span class="hljs-string"></span><br><span class="hljs-string">  `</span><span class="hljs-string">``</span>javascript<br>  function insertSort(arr) &#123;<br>      if (arr == null || arr.length &lt; <span class="hljs-number">2</span>)&#123;<br>          return;<br>      &#125;<br>      for (let i = <span class="hljs-number">0</span>; i &lt; arr.length; i++)&#123;<br>          for (let j = i; j &gt; <span class="hljs-number">0</span>; j--)&#123;<br>              if (arr[j] &lt; arr[j<span class="hljs-number">-1</span>])&#123;<br>                  swap(arr,j, j<span class="hljs-number">-1</span>);<br>              &#125;<br>          &#125;<br>      &#125;<br>      return arr;<br>  &#125;<br>  function swap(arr,i, j) &#123;<br>      arr[i] = arr[i] ^ arr[j];<br>      arr[j] = arr[i] ^ arr[j];<br>      arr[i] = arr[i] ^ arr[j];<br>  &#125;<br>  let array = [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>];<br>  console.log(insertSort(array))<br></code></pre></td></tr></table></figure></li></ul><h3 id="算法的脉络"><a href="#算法的脉络" class="headerlink" title="算法的脉络"></a>算法的脉络</h3><ul><li>知道怎么算的算法</li><li>知道怎么试的算法</li></ul><h3 id="对数器"><a href="#对数器" class="headerlink" title="对数器"></a>对数器</h3>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>基础阶段</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Algorithm</tag>
      
      <tag>interview</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>社会心理学笔记 导论</title>
    <link href="/2022/01/22/%E7%A4%BE%E4%BC%9A%E5%BF%83%E7%90%86%E5%AD%A6%E7%AC%94%E8%AE%B0-%E5%AF%BC%E8%AE%BA/"/>
    <url>/2022/01/22/%E7%A4%BE%E4%BC%9A%E5%BF%83%E7%90%86%E5%AD%A6%E7%AC%94%E8%AE%B0-%E5%AF%BC%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="社会心理学导论"><a href="#社会心理学导论" class="headerlink" title="社会心理学导论"></a>社会心理学导论</h1><h3 id="内容汇总"><a href="#内容汇总" class="headerlink" title="内容汇总"></a>内容汇总</h3><ul><li>导论<ul><li>基本概念</li><li>重要观点</li><li>价值观对心理学的影响</li><li>社会心理学的实验方法</li></ul></li><li>社会思维<ul><li>我们如何看待自己和他人</li><li>自我的概念, 自尊, 自我控制, 自我服务偏差, 印象管理, 社会信念和判断态度与行为的相互影响</li></ul></li><li>社会影响<ul><li>我们如何彼此影响和联系</li><li>深刻剖析社会影响的威力</li><li>涉及态度与行为的文化根源</li><li>社会服从的力量, 说服的关系和群体影响的内容</li></ul></li><li>社会关系<ul><li>彼此如何发生联系</li><li>分析了人与人之间感受和行为的正负极性</li><li>偏见, 攻击 </li><li>心与亲密</li><li>利他, 冲突与和解</li></ul></li><li>应用社会心理学<ul><li>将上述的原理和理论成果应用到生活中</li><li>临床</li><li>司法</li><li>与人类可持续发展的关系</li><li>以及人类遇到的问题究竟在社会心理学上如何解决</li></ul></li></ul><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>社会心理学主要采用科学方法 探索爱与恨, 从众与独立, 偏见与助人 以及 说服与自主等</p></blockquote><p>通过这本书和这门学科, 我们将对日常行为进行批评性思考, 更好的理解自身以及工作, 玩耍和深爱的世界</p><p>社会心理学是关于人的学科</p><blockquote><p>萨特: “我们人类首先存在于环境之中, 我们不能脱离环境, 环境塑造了我们, 决定了我们的可能性”</p></blockquote><h3 id="社会心理学的概念"><a href="#社会心理学的概念" class="headerlink" title="社会心理学的概念"></a>社会心理学的概念</h3><ul><li><p>社会心理学: </p><ul><li>一门研究我们周围情境影响力的科学, 关注我们如何看待他人, 如何互相影响, 以及如何与他人相互关联的科学</li><li>心理学与社会学的交叉学科<ul><li>社会学           [研究群体和社会中的人]</li><li>社会心理学   [侧重于用实验的方法对个体进行研究, 但是又不同于人格心理学研究人们之间差异; 侧重于不同个体之间如何看待和彼此影响]</li></ul></li><li>新兴学科; 第一个社会心理学实验开展在一个世纪前</li></ul></li><li><p>一些例子</p><ul><li>我们的社会行为更多取决于所处的客观环境, 还是我们对情境的判断?<ul><li>答案是都有</li></ul></li><li>人们会听命做出残忍的行为么?<ul><li>会; 法学例子(告密者案); 战争例子(二战时的群体行为);</li></ul></li><li>助人?助己?<ul><li>什么情景下会让人们变得乐于助人或贪婪?</li><li>某些文化背景能更好的培养人们乐于助人的品质?</li></ul></li></ul></li></ul><h3 id="社会心理学的重要观点"><a href="#社会心理学的重要观点" class="headerlink" title="社会心理学的重要观点"></a>社会心理学的重要观点</h3><ul><li>我们构建了社会现实<ul><li>我们总是有一种不可抑制的冲动, 想要解释行为, 对其归因, 以使其变得秩序井然, 具有可预见性, 使一切尽在掌握之中.</li><li>对同一段事实, 我们会因为想法不同产生不同的解释;  [举例: 1951年, 普林斯顿和达特茅斯的橄榄球赛]</li><li>结论<ul><li><strong>客观事实的确存在, 但是我们总是带着有色眼镜(新年和价值观)去看待;</strong></li><li>为了适应我们日常生活的需要, 我们经常快而准确的解释他人的行为;</li><li>当他人的行为具有一致性且与众不同的时候, 我们会把行为归因于他的人格;</li><li>我们对自己的信念也影响了我们的情绪和行为;</li><li><strong>我们如何构建世界, 取决于我们如何构建自己</strong></li></ul></li></ul></li></ul><h3 id="社会心理学与人类价值观"><a href="#社会心理学与人类价值观" class="headerlink" title="社会心理学与人类价值观"></a>社会心理学与人类价值观</h3><h3 id="社会心理学只是常识么"><a href="#社会心理学只是常识么" class="headerlink" title="社会心理学只是常识么"></a>社会心理学只是常识么</h3><h3 id="研究方法-我们如何从事社会心理学研究"><a href="#研究方法-我们如何从事社会心理学研究" class="headerlink" title="研究方法: 我们如何从事社会心理学研究"></a>研究方法: 我们如何从事社会心理学研究</h3><h3 id="后记-我为什么要写这本书"><a href="#后记-我为什么要写这本书" class="headerlink" title="后记: 我为什么要写这本书"></a>后记: 我为什么要写这本书</h3>]]></content>
    
    
    <categories>
      
      <category>心理学</category>
      
      <category>社会心理学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Psychology</tag>
      
      <tag>Social Psychology</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>408 C语言基础</title>
    <link href="/2022/01/22/408-C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/22/408-C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="C语言基础学习"><a href="#C语言基础学习" class="headerlink" title="C语言基础学习"></a>C语言基础学习</h1><blockquote><p>纯实践知识, 不介绍发展历史与相关来源</p></blockquote><h3 id="写程序常见的问题"><a href="#写程序常见的问题" class="headerlink" title="写程序常见的问题"></a>写程序常见的问题</h3><ul><li>安装环境</li><li>新建项目</li><li>程序编译不通<ul><li>没写main, 多写了main</li><li>没写分号</li><li>没加安全宏</li><li>编译了但是运行了上次的代码</li><li>…</li></ul></li><li>编译错误 VS 执行错误</li><li>学会调试</li><li>不理解原理应用到代码中</li><li>…</li></ul><h3 id="使用的编辑器"><a href="#使用的编辑器" class="headerlink" title="使用的编辑器"></a>使用的编辑器</h3><ul><li>Visual Studio</li><li></li></ul>]]></content>
    
    
    <categories>
      
      <category>408</category>
      
      <category>C语言基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>408</tag>
      
      <tag>C</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>心理学现象</title>
    <link href="/2022/01/21/%E5%BF%83%E7%90%86%E5%AD%A6%E7%8E%B0%E8%B1%A1/"/>
    <url>/2022/01/21/%E5%BF%83%E7%90%86%E5%AD%A6%E7%8E%B0%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="心理学现象"><a href="#心理学现象" class="headerlink" title="心理学现象"></a>心理学现象</h1><h3 id="沉默的螺旋"><a href="#沉默的螺旋" class="headerlink" title="沉默的螺旋"></a>沉默的螺旋</h3><ul><li>人们在表达自己想法和观点的时候，如果看到自己赞同的观点受到广泛欢迎，就会积极参与进来，这类观点就会越发大胆地发表和扩散；而发觉某一观点无人或很少有人理会（有时会有群起而攻之的遭遇），即使自己赞同它，也会保持沉默。</li><li>意见一方的沉默造成另一方意见的增势，如此循环往复，便形成一方的声音越来越强大，另一方越来越沉默下去的螺旋发展过程。理论是基于这样一个假设：大多数个人会力图避免由于单独持有某些态度和信念而产生的孤立。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python爬虫 request模块</title>
    <link href="/2022/01/20/Python%E7%88%AC%E8%99%AB-request%E6%A8%A1%E5%9D%97/"/>
    <url>/2022/01/20/Python%E7%88%AC%E8%99%AB-request%E6%A8%A1%E5%9D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="request模块"><a href="#request模块" class="headerlink" title="request模块"></a>request模块</h1><h3 id="requests模块介绍"><a href="#requests模块介绍" class="headerlink" title="requests模块介绍"></a>requests模块介绍</h3><ul><li><p>python中原生的一款基于网络请求的模块，功能非常强大，简单便捷，效率极高。<br>作用：模拟浏览器发请求。</p></li><li><p>还有一个网络请求模块 urllib</p></li></ul><h3 id="如何使用-requests-模块的编码流程"><a href="#如何使用-requests-模块的编码流程" class="headerlink" title="如何使用: (requests 模块的编码流程)"></a>如何使用: (requests 模块的编码流程)</h3><ul><li>指定url<ul><li>UA伪装</li><li>请求参数的处理</li></ul></li><li>发起请求</li><li>获取响应数据</li><li>持久化存储</li></ul><h3 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> requests<br></code></pre></td></tr></table></figure><h3 id="具体实战"><a href="#具体实战" class="headerlink" title="具体实战"></a>具体实战</h3><ul><li><p>简单请求</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding:utf-8 -*-</span><br><span class="hljs-comment">#- 需求：爬取搜狗首页的页面数据</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment">#step_1:指定url</span><br>    url = <span class="hljs-string">&#x27;https://www.sogou.com/&#x27;</span><br>    <span class="hljs-comment">#step_2:发起请求</span><br>    <span class="hljs-comment">#get方法会返回一个响应对象</span><br>    response = requests.get(url=url)<br>    <span class="hljs-comment">#step_3:获取响应数据.text返回的是字符串形式的响应数据</span><br>    page_text = response.text<br>    <span class="hljs-built_in">print</span>(page_text)<br>    <span class="hljs-comment">#step_4:持久化存储</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./sogou.html&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> fp:<br>        fp.write(page_text)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;爬取数据结束！！！&#x27;</span>)<br></code></pre></td></tr></table></figure></li><li><p>带UA的请求</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding:utf-8 -*-</span><br><br><span class="hljs-comment">#UA：User-Agent（请求载体的身份标识）</span><br><span class="hljs-comment">#UA检测：门户网站的服务器会检测对应请求的载体身份标识，如果检测到请求的载体身份标识为某一款浏览器，</span><br><span class="hljs-comment">#说明该请求是一个正常的请求。但是，如果检测到请求的载体身份标识不是基于某一款浏览器的，则表示该请求</span><br><span class="hljs-comment">#为不正常的请求（爬虫），则服务器端就很有可能拒绝该次请求。</span><br><br><span class="hljs-comment">#UA伪装：让爬虫对应的请求载体身份标识伪装成某一款浏览器</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment">#UA伪装：将对应的User-Agent封装到一个字典中</span><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>:<span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36&#x27;</span><br>    &#125;<br>    url = <span class="hljs-string">&#x27;https://www.sogou.com/web&#x27;</span><br>    <span class="hljs-comment">#处理url携带的参数：封装到字典中</span><br>    kw = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;enter a word:&#x27;</span>)<br>    param = &#123;<br>        <span class="hljs-string">&#x27;query&#x27;</span>:kw<br>    &#125;<br>    <span class="hljs-comment">#对指定的url发起的请求对应的url是携带参数的，并且请求过程中处理了参数</span><br>    response = requests.get(url=url,params=param,headers=headers)<br><br>    page_text = response.text<br>    fileName = kw+<span class="hljs-string">&#x27;.html&#x27;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(fileName,<span class="hljs-string">&#x27;w&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> fp:<br>        fp.write(page_text)<br>    <span class="hljs-built_in">print</span>(fileName,<span class="hljs-string">&#x27;保存成功！！！&#x27;</span>)<br><br></code></pre></td></tr></table></figure></li><li><p>ajax请求</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding:utf-8 -*-</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment">#1.指定url</span><br>    post_url = <span class="hljs-string">&#x27;https://fanyi.baidu.com/sug&#x27;</span><br>    <span class="hljs-comment">#2.进行UA伪装</span><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36&#x27;</span><br><br>    &#125;<br>    <span class="hljs-comment">#3.post请求参数处理（同get请求一致）</span><br>    word = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;enter a word:&#x27;</span>)<br>    data = &#123;<br>        <span class="hljs-string">&#x27;kw&#x27;</span>:word<br>    &#125;<br>    <span class="hljs-comment">#4.请求发送</span><br>    response = requests.post(url=post_url,data=data,headers=headers)<br>    <span class="hljs-comment">#5.获取响应数据:json()方法返回的是obj（如果确认响应数据是json类型的，才可以使用json（））</span><br>    dic_obj = response.json()<br><br>    <span class="hljs-comment">#持久化存储</span><br>    fileName = word+<span class="hljs-string">&#x27;.json&#x27;</span><br>    fp = <span class="hljs-built_in">open</span>(fileName,<span class="hljs-string">&#x27;w&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    json.dump(dic_obj,fp=fp,ensure_ascii=<span class="hljs-literal">False</span>)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;over!!!&#x27;</span>)<br></code></pre></td></tr></table></figure></li><li><p>豆瓣电影   [传参, header, json方式]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    url = <span class="hljs-string">&#x27;https://movie.douban.com/j/chart/top_list&#x27;</span><br>    param = &#123;<br>        <span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;24&#x27;</span>,<br>        <span class="hljs-string">&#x27;interval_id&#x27;</span>: <span class="hljs-string">&#x27;100:90&#x27;</span>,<br>        <span class="hljs-string">&#x27;action&#x27;</span>:<span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-string">&#x27;start&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>,<span class="hljs-comment">#从库中的第几部电影去取</span><br>        <span class="hljs-string">&#x27;limit&#x27;</span>: <span class="hljs-string">&#x27;20&#x27;</span>,<span class="hljs-comment">#一次取出的个数</span><br>    &#125;<br>    headers = &#123;<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36&#x27;</span><br><br>    &#125;<br>    response = requests.get(url=url,params=param,headers=headers)<br><br>    list_data = response.json()<br><br>    fp = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./douban.json&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    json.dump(list_data,fp=fp,ensure_ascii=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;over!!!&#x27;</span>)<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Programing</tag>
      
      <tag>Python</tag>
      
      <tag>Crawler</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>法律学习 行政法 PartI 绪论</title>
    <link href="/2022/01/19/%E6%B3%95%E5%BE%8B%E5%AD%A6%E4%B9%A0-%E8%A1%8C%E6%94%BF%E6%B3%95-I-%E7%BB%AA%E8%AE%BA/"/>
    <url>/2022/01/19/%E6%B3%95%E5%BE%8B%E5%AD%A6%E4%B9%A0-%E8%A1%8C%E6%94%BF%E6%B3%95-I-%E7%BB%AA%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="行政法绪论"><a href="#行政法绪论" class="headerlink" title="行政法绪论"></a>行政法绪论</h1><h3 id="行政法的概念与体系"><a href="#行政法的概念与体系" class="headerlink" title="行政法的概念与体系"></a>行政法的概念与体系</h3><ul><li>行政<ul><li>行政权 = 管理权</li><li>公管理活动</li></ul></li><li>行政法<ul><li>核心在于”控权”  </li><li>调整对象<ul><li>{不平等的主体之间的法律关系}</li></ul></li><li>只是行政机关有行政?<ul><li>否; 可以授权</li></ul></li><li>行政机关的所有活动都是行政活动?<ul><li>否; 有时是平等的活动</li></ul></li><li>总结: 不以主体论关系, 要以行为论关系</li></ul></li><li>行政法控权的方式<ul><li>合法行政<ul><li>法的解释<ul><li>宪法</li><li>法律</li><li>行政法规</li><li>地方性法规</li><li>民族自治条例和单行条例</li><li>行政规章<ul><li>部门规章</li><li>地方规章 [内部有高低, 总体与部门规章同地位]</li><li>其他规范文件[红头文件, PS: 谁能制定]</li></ul></li><li>国际条约与解释</li><li>法律解释</li></ul></li></ul></li><li>行政法学的基本体系<ul><li>两个主体<ul><li>行政主体</li><li>行政相对人 + 行政相关人<ul><li>相对人: 承受行政管理的人</li><li>相关人: 与行政行为的成立有利害关系的人</li></ul></li></ul></li><li>一个行为 {行政法的基石}<ul><li>行政主体对行政相对人的</li></ul></li><li>三个救济阶段<ul><li>行政诉讼    {找法院}</li><li>行政复议    {找爹告状}</li><li>国家赔偿    {给钱}</li></ul></li></ul></li></ul></li></ul><h3 id="行政法的基本原则"><a href="#行政法的基本原则" class="headerlink" title="行政法的基本原则"></a>行政法的基本原则</h3><ul><li>规则不在, 规则不行的时候; 我们使用基本原则</li><li>六个原则<ul><li>合法行政 {核心; 区别于民法的最主要标志}   {形式法制的体现}<ul><li>合法行政 VS 依法行政<ul><li>依法行政是六个原则的综合</li></ul></li><li>基本内涵<ul><li>法律优先</li><li>法律保留  {无立法, 无行政; 无授权, 无行政}</li></ul></li></ul></li><li>合理行政 {具有有理性}  {实质法治的体现}<ul><li>公平公正         {实质平等}</li><li>考虑相关因素  </li><li>比例原则<ul><li>合目的性   {行为符合目的}</li><li>适当性       {行为和目的存在正当性}</li><li>损害最小   {少侵害}</li></ul></li></ul></li><li>程序正当<ul><li>行政公开<ul><li>特例<ul><li>国家秘密一律不</li><li>商业机密原则不</li></ul></li></ul></li><li>公众参与<ul><li>贯穿了行政行为的全过程</li><li>决定前    告知当事人行政行为的事实, 理由和主要依据</li><li>决定中   听取陈述申辩, 听证会</li><li>决定后   说明采纳与不采纳的理由</li></ul></li><li>公务回避<ul><li>利害回避</li><li>保证中立而回避</li></ul></li></ul></li><li>高效便民<ul><li>行政效率</li><li>便利当事人原则</li></ul></li><li>诚实守信<ul><li>诚 :  全面准确真实的公布消息</li><li>信 : 信赖利益保护原则<ul><li>非因法定事由并经法定程序,行政机关不得撤销, 变更已生效的行政决定</li><li>因法定事由需要撤销,废止或者变更行政决定的,应按照法定权限和程序进行; 并且给予赔偿或者补偿</li><li>PS: 赔偿 VS 补偿<ul><li>赔偿是对违法行为</li><li>补偿是对正确的行为</li></ul></li></ul></li></ul></li><li>权责统一<ul><li>权</li><li>责</li><li>用权受监督, 违法受追究, 侵权需赔偿</li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>法学</category>
      
      <category>行政法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>jurisprudence</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>408 进度汇总</title>
    <link href="/2022/01/18/408-%E8%BF%9B%E5%BA%A6%E6%B1%87%E6%80%BB/"/>
    <url>/2022/01/18/408-%E8%BF%9B%E5%BA%A6%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408 数据结构 VIII 排序</title>
    <link href="/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-VIII-%E6%8E%92%E5%BA%8F/"/>
    <url>/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-VIII-%E6%8E%92%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408 数据结构 VII 查找</title>
    <link href="/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-VII-%E6%9F%A5%E6%89%BE/"/>
    <url>/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-VII-%E6%9F%A5%E6%89%BE/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408 数据结构 VI 图</title>
    <link href="/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-VI-%E5%9B%BE/"/>
    <url>/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-VI-%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408 数据结构 V 树与二叉树</title>
    <link href="/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-V-%E6%A0%91%E4%B8%8E%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <url>/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-V-%E6%A0%91%E4%B8%8E%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408 数据结构 IV 串</title>
    <link href="/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-IV-%E4%B8%B2/"/>
    <url>/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-IV-%E4%B8%B2/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408 数据结构 III 栈 队列和数组</title>
    <link href="/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-III-%E6%A0%88-%E9%98%9F%E5%88%97%E5%92%8C%E6%95%B0%E7%BB%84/"/>
    <url>/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-III-%E6%A0%88-%E9%98%9F%E5%88%97%E5%92%8C%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408 数据结构 II 线性表</title>
    <link href="/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-II-%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    <url>/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-II-%E7%BA%BF%E6%80%A7%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408 数据结构 I 绪论</title>
    <link href="/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-I-%E7%BB%AA%E8%AE%BA/"/>
    <url>/2022/01/18/408-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-I-%E7%BB%AA%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>302备考记录</title>
    <link href="/2022/01/18/302%E5%A4%87%E8%80%83%E8%AE%B0%E5%BD%95/"/>
    <url>/2022/01/18/302%E5%A4%87%E8%80%83%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>202备考记录</title>
    <link href="/2022/01/18/202%E5%A4%87%E8%80%83%E8%AE%B0%E5%BD%95/"/>
    <url>/2022/01/18/202%E5%A4%87%E8%80%83%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>101备考记录</title>
    <link href="/2022/01/18/101%E5%A4%87%E8%80%83%E8%AE%B0%E5%BD%95/"/>
    <url>/2022/01/18/101%E5%A4%87%E8%80%83%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>408备考记录</title>
    <link href="/2022/01/18/408%E5%A4%87%E8%80%83%E8%AE%B0%E5%BD%95/"/>
    <url>/2022/01/18/408%E5%A4%87%E8%80%83%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>统计学习方法 I 统计学习及监督学习概论</title>
    <link href="/2022/01/18/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-I-%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E5%8F%8A%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/"/>
    <url>/2022/01/18/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-I-%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E5%8F%8A%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="统计学习及监督学习概论"><a href="#统计学习及监督学习概论" class="headerlink" title="统计学习及监督学习概论"></a>统计学习及监督学习概论</h1><h3 id="0-引入"><a href="#0-引入" class="headerlink" title="0. 引入"></a>0. 引入</h3><ul><li>本章内容: <ul><li>统计学习 &amp; 监督学习的概念</li></ul></li></ul><h3 id="1-统计学习"><a href="#1-统计学习" class="headerlink" title="1. 统计学习"></a>1. 统计学习</h3><h6 id="统计学习的特点"><a href="#统计学习的特点" class="headerlink" title="统计学习的特点:"></a>统计学习的特点:</h6><ul><li>统计学习: 关于计算机基于数据构建概率统计模型并运用模型对数据进行预测和分析的一门学科</li></ul><p>​                也被称为统计机器学习</p><ul><li>特点: <ul><li>建立在计算机及网络上</li><li>以数据为研究对象</li><li>目的是对数据进行预测和分析</li><li>统计学习以方法为中心, 统计学习方法构建模型并应用模型进行预测与分析</li><li>是概率论, 统计学, 信息论, 计算理论, 最优化理论及计算机科学等多个领域的交叉学科</li></ul></li></ul><h6 id=""><a href="#" class="headerlink" title=""></a></h6><h3 id="2-统计学习的分类"><a href="#2-统计学习的分类" class="headerlink" title="2. 统计学习的分类"></a>2. 统计学习的分类</h3><ul><li>基本分类</li><li>按模型分类</li><li>按算法分类</li><li>按技巧分类</li></ul><h3 id="3-统计学习方法三要素"><a href="#3-统计学习方法三要素" class="headerlink" title="3. 统计学习方法三要素"></a>3. 统计学习方法三要素</h3><ul><li>模型</li><li>策略</li><li>算法</li></ul><h3 id="4-模型评估与模型选择"><a href="#4-模型评估与模型选择" class="headerlink" title="4. 模型评估与模型选择"></a>4. 模型评估与模型选择</h3><ul><li>训练误差与测试误差</li><li>过拟合与测试误差</li></ul><h3 id="5-正则化与交叉验证"><a href="#5-正则化与交叉验证" class="headerlink" title="5. 正则化与交叉验证"></a>5. 正则化与交叉验证</h3><ul><li>正则化</li><li>交叉验证</li></ul><h3 id="6-泛化能力"><a href="#6-泛化能力" class="headerlink" title="6. 泛化能力"></a>6. 泛化能力</h3><ul><li>泛化误差</li><li>泛化误差上界</li></ul><h3 id="7-生成模型与判别模型"><a href="#7-生成模型与判别模型" class="headerlink" title="7. 生成模型与判别模型"></a>7. 生成模型与判别模型</h3><h3 id="8-监督学习应用"><a href="#8-监督学习应用" class="headerlink" title="8. 监督学习应用"></a>8. 监督学习应用</h3><ul><li>分类问题</li><li>标注问题</li><li>回归问题</li></ul><h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>统计学习方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
      <tag>Statistics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端笔记 工具篇</title>
    <link href="/2022/01/18/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0-%E5%B7%A5%E5%85%B7%E7%AF%87/"/>
    <url>/2022/01/18/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0-%E5%B7%A5%E5%85%B7%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python爬虫笔记 开始学习爬虫之前</title>
    <link href="/2022/01/18/Python%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-%E5%BC%80%E5%A7%8B%E5%AD%A6%E4%B9%A0%E7%88%AC%E8%99%AB%E4%B9%8B%E5%89%8D/"/>
    <url>/2022/01/18/Python%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-%E5%BC%80%E5%A7%8B%E5%AD%A6%E4%B9%A0%E7%88%AC%E8%99%AB%E4%B9%8B%E5%89%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="爬虫准备"><a href="#爬虫准备" class="headerlink" title="爬虫准备"></a>爬虫准备</h1><h3 id="什么是爬虫"><a href="#什么是爬虫" class="headerlink" title="什么是爬虫"></a>什么是爬虫</h3><ul><li>编写程序, 模拟浏览器上网, 然后去互联网抓取数据的过程</li></ul><h3 id="爬虫的价值"><a href="#爬虫的价值" class="headerlink" title="爬虫的价值"></a>爬虫的价值</h3><ul><li>抓取数据[将数据产生价值]</li><li>就业</li></ul><h3 id="合法性"><a href="#合法性" class="headerlink" title="合法性"></a>合法性</h3><ul><li>在法律中不被禁止,  但具有违法风险</li><li>善意爬虫 VS 恶意爬虫<ul><li>是否干扰了网站的正常运行? </li><li>是否获取了受到法律保护的特定数据或者信息?</li></ul></li></ul><h3 id="避免进局子"><a href="#避免进局子" class="headerlink" title="避免进局子"></a>避免进局子</h3><ul><li>优化爬虫程序,避免对网站运行的干扰</li><li>使用时,审查内容,如果发现牵扯到用户隐私或者商业机密等内容,就需要及时停止爬取</li></ul><h3 id="爬虫在使用场景中的分类"><a href="#爬虫在使用场景中的分类" class="headerlink" title="爬虫在使用场景中的分类"></a>爬虫在使用场景中的分类</h3><ul><li><p>通用爬虫：</p><ul><li>抓取系统重要组成部分。抓取的是一整张页面数据。</li></ul></li><li><p>聚焦爬虫：</p><ul><li>是建立在通用爬虫的基础之上。抓取的是页面中特定的局部内容。</li></ul></li><li><p>增量式爬虫：</p><ul><li>检测网站中数据更新的情况。只会抓取网站中最新更新出来的数据。</li></ul></li></ul><h3 id="爬虫的矛与盾"><a href="#爬虫的矛与盾" class="headerlink" title="爬虫的矛与盾"></a>爬虫的矛与盾</h3><ul><li>反爬机制<ul><li>门户网站，可以通过制定相应的策略或者技术手段，防止爬虫程序进行网站数据的爬取。</li></ul></li><li>反反爬机制<ul><li>爬虫程序可以通过制定相关的策略或者技术手段，破解门户网站中具备的反爬机制，从而可以获取门户网站中相关的数据。</li></ul></li><li>robots.txt协议：<ul><li>君子协定。 规定爬虫不可以爬取的内容</li></ul></li></ul><h3 id="HTTP-HTTPS协议"><a href="#HTTP-HTTPS协议" class="headerlink" title="HTTP HTTPS协议"></a>HTTP HTTPS协议</h3><ul><li>http<ul><li>概念：就是服务器和客户端进行数据交互的一种形式。</li><li>常用请求头<ul><li>User-Agent：请求载体的身份标识</li><li>Connection：请求完毕后，是断开连接还是保持连接</li></ul></li><li>常用响应头信息<ul><li>Content-Type：服务器响应回客户端的数据类型</li></ul></li></ul></li><li>https<ul><li>安全的超文本传输协议</li></ul></li><li>加密方式<ul><li>对称密钥加密<ul><li>密文密钥都一起过去  不安全</li></ul></li><li>非对称密钥加密<ul><li>没法保证客户端拿到的公钥是真的公钥</li></ul></li><li>证书密钥加密<ul><li>数字证书对公钥加密</li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Programing</tag>
      
      <tag>Python</tag>
      
      <tag>Crawler</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记 网络编程篇</title>
    <link href="/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E7%AF%87/"/>
    <url>/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记 数据库篇</title>
    <link href="/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/"/>
    <url>/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记 模块与文件操作篇</title>
    <link href="/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E6%A8%A1%E5%9D%97%E4%B8%8E%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E7%AF%87/"/>
    <url>/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E6%A8%A1%E5%9D%97%E4%B8%8E%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记 魔法方法 特性 迭代器篇</title>
    <link href="/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E9%AD%94%E6%B3%95%E6%96%B9%E6%B3%95-%E7%89%B9%E6%80%A7-%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%AF%87/"/>
    <url>/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E9%AD%94%E6%B3%95%E6%96%B9%E6%B3%95-%E7%89%B9%E6%80%A7-%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记 异常篇</title>
    <link href="/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%BC%82%E5%B8%B8%E7%AF%87/"/>
    <url>/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%BC%82%E5%B8%B8%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记 函数篇</title>
    <link href="/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%87%BD%E6%95%B0%E7%AF%87/"/>
    <url>/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%87%BD%E6%95%B0%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记 字典篇</title>
    <link href="/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%AD%97%E5%85%B8%E7%AF%87/"/>
    <url>/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%AD%97%E5%85%B8%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记 列表元组篇</title>
    <link href="/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%88%97%E8%A1%A8%E5%85%83%E7%BB%84%E7%AF%87/"/>
    <url>/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%88%97%E8%A1%A8%E5%85%83%E7%BB%84%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="列表与元组"><a href="#列表与元组" class="headerlink" title="列表与元组"></a>列表与元组</h1><h3 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h3><ul><li><p>偏移量</p></li><li><p>切片</p></li><li><p>相加</p></li><li><p>相乘</p></li><li><p>成员资格</p></li><li><p>迭代(见后)</p></li><li><p>代码操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python">greeting = <span class="hljs-string">&quot;hello&quot;</span><br><br><span class="hljs-comment"># 索引</span><br>a = greeting[<span class="hljs-number">0</span>]<br>b = greeting[-<span class="hljs-number">1</span>]<br><br><span class="hljs-comment"># 切片</span><br>slice1 = greeting[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>]<br>slice2 = greeting[<span class="hljs-number">0</span>:<span class="hljs-number">4</span>:<span class="hljs-number">2</span>]<br>slice3 = greeting[<span class="hljs-number">0</span>::<span class="hljs-number">2</span>]<br>slice4 = greeting[-<span class="hljs-number">4</span>:-<span class="hljs-number">1</span>:<span class="hljs-number">2</span>]<br>slice5 = greeting[:]<br>slice6 = greeting[-<span class="hljs-number">4</span>:]<br>slice7 = greeting[:-<span class="hljs-number">1</span>]<br>slice8 = greeting[<span class="hljs-number">0</span>:<span class="hljs-number">4</span>:-<span class="hljs-number">1</span>]<br><br><span class="hljs-comment"># 序列相加 (拼接同类序列)</span><br>concat1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>] + [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>]<br><br><span class="hljs-comment"># 乘法</span><br>multi1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>] * <span class="hljs-number">5</span><br>multi2 = <span class="hljs-string">&#x27;python&#x27;</span> * <span class="hljs-number">5</span><br>multi3 = [<span class="hljs-literal">None</span>] * <span class="hljs-number">5</span><br><br><span class="hljs-comment"># 成员资格</span><br>checkMember = <span class="hljs-string">&#x27;w&#x27;</span> <span class="hljs-keyword">in</span> greeting<br>checkMember2 = <span class="hljs-string">&#x27;h&#x27;</span> <span class="hljs-keyword">in</span> greeting<br><br><span class="hljs-comment"># 长度, 最小值, 最大值</span><br><span class="hljs-built_in">len</span>(greeting)<br><span class="hljs-built_in">max</span>(greeting)<br><span class="hljs-built_in">max</span>([<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>])<br><span class="hljs-built_in">min</span>(greeting)<br><span class="hljs-built_in">min</span>([<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>])<br><br></code></pre></td></tr></table></figure></li></ul><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ul><li></li></ul><h3 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h3>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>list and tuple</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Programing</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记 字符串篇</title>
    <link href="/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%AF%87/"/>
    <url>/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记 引入篇</title>
    <link href="/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%BC%95%E5%85%A5%E7%AF%87/"/>
    <url>/2022/01/16/Python%E7%AC%94%E8%AE%B0-%E5%BC%95%E5%85%A5%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="Python-引入"><a href="#Python-引入" class="headerlink" title="Python 引入"></a>Python 引入</h1><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h3><p>​    前人之述备矣 <a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1016959856222624">https://www.liaoxuefeng.com/wiki/1016959663602400/1016959856222624</a></p><h3 id="2-算法"><a href="#2-算法" class="headerlink" title="2. 算法"></a>2. 算法</h3><p>​    具体的内容将在算法篇中进行详细介绍</p><p>​    这里只介绍算法的概念</p><ul><li>算法是我们完成任务时的具体流程</li></ul><h3 id="3-数据类型"><a href="#3-数据类型" class="headerlink" title="3. 数据类型"></a>3. 数据类型</h3><ul><li>数(待补充具体内容)<ul><li>浮点数</li><li>整数</li><li>进制<ul><li>十六进制 0x</li><li>八进制 0</li><li>二进制 0b</li></ul></li><li>表达式与基本运算<ul><li>四则运算:    +    -     *    /    //(整除)   %(取余数) </li><li>乘方   **</li></ul></li></ul></li></ul><h4 id="4-变量"><a href="#4-变量" class="headerlink" title="4. 变量"></a>4. 变量</h4><ul><li>变量名规则</li><li>变量名规范</li><li>赋值</li></ul><h3 id="5-语句"><a href="#5-语句" class="headerlink" title="5. 语句"></a>5. 语句</h3><ul><li>做事情的程序<ul><li>举例: print 语句; 赋值语句</li></ul></li><li>获取用户输入<ul><li>input(“输入的提示字符串”)</li></ul></li></ul><h3 id="6-函数"><a href="#6-函数" class="headerlink" title="6. 函数"></a>6. 函数</h3><ul><li>内置函数<ul><li>举例<ul><li>abs</li><li>pow</li><li>round</li></ul></li></ul></li></ul><h3 id="7-模块"><a href="#7-模块" class="headerlink" title="7. 模块"></a>7. 模块</h3><ul><li>程序的扩展</li><li>举例<ul><li>math库</li><li>cmath库</li><li>_<em>future</em>_</li></ul></li></ul><h3 id="8-字符串"><a href="#8-字符串" class="headerlink" title="8. 字符串"></a>8. 字符串</h3><ul><li>单双字符</li><li>注释字符串</li><li>拼接字符串</li><li>str与repr</li><li>长字符串 原始字符串 字节<ul><li>长字符串 (使用三引号)</li><li>原始字符串 (使用r’’)</li><li>字节 (Unicode, bytes, bytearray)</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>introduction</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Programing</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python笔记 面向对象篇</title>
    <link href="/2022/01/13/Python%E7%AC%94%E8%AE%B0-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%AF%87/"/>
    <url>/2022/01/13/Python%E7%AC%94%E8%AE%B0-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="Python-面向对象编程"><a href="#Python-面向对象编程" class="headerlink" title="Python 面向对象编程"></a>Python 面向对象编程</h1><h3 id="一-什么是面向对象编程"><a href="#一-什么是面向对象编程" class="headerlink" title="一. 什么是面向对象编程"></a>一. 什么是面向对象编程</h3><ul><li>面向对象编程 [Object Oriented Programming，简称OOP]，是一种程序设计思想。OOP把对象作为程序的基本单元，一个对象包含了数据和操作数据的函数。</li><li><strong>对比面向过程编程</strong><ul><li>面向过程: 将程序视为指令的集合; 将函数拆分成子函数, 进行步骤分解来增加可读性, 降低复杂度</li><li>面向对象: 将程序视为一组对象的集合; 每个对象都可以接收其他对象发过来的消息，并处理这些消息，计算机程序的执行就是一系列消息在各个对象之间传递</li></ul></li><li>面向对象的设计思想<ul><li>抽象出Class, 根据Class创建Instance</li></ul></li></ul><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="二-Python-中的面向对象编程"><a href="#二-Python-中的面向对象编程" class="headerlink" title="二. Python 中的面向对象编程"></a>二. Python 中的面向对象编程</h3><ul><li><p>所有数据类型都可以视为对象</p><ul><li><p>面向对象举例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 函数式编程</span><br>std1 = &#123; <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Michael&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">98</span> &#125;<br>std2 = &#123; <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Bob&#x27;</span>, <span class="hljs-string">&#x27;score&#x27;</span>: <span class="hljs-number">81</span> &#125;<br><br><span class="hljs-comment"># 面向对象编程</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Student</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name, score</span>):</span><br>        self.name = name<br>        self.score = score<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">print_score</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s: %s&#x27;</span> % (self.name, self.score))<br>        <br>bart = Student(<span class="hljs-string">&#x27;Bart Simpson&#x27;</span>, <span class="hljs-number">59</span>)<br>lisa = Student(<span class="hljs-string">&#x27;Lisa Simpson&#x27;</span>, <span class="hljs-number">87</span>)<br>bart.print_score()<br>lisa.print_score()<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="三-面向对象基础"><a href="#三-面向对象基础" class="headerlink" title="三.面向对象基础"></a>三.面向对象基础</h3><ul><li><p>类</p><ul><li>抽象概念; 将某类事物的共同具有的属性和方法提取出来</li><li>PS: 面向对象的抽象程度又比函数要高，因为一个Class既包含数据，又包含操作数据的方法。</li></ul></li><li><p>实例</p><ul><li>建立在类之上的具体事物</li><li>建立实例时调用了 _<em>init</em>_() 方法</li></ul></li><li><p>面向对象三性质</p><ul><li>多态（polymorphism）：一个函数有多种表现形式，调用一个方法有多种形式，但是表现出的方法是不一样的。</li><li>继承（inheritance）子项继承父项的某些功能，在程序中表现某种联系</li><li>封装（encapsulation）把需要重用的函数或者功能封装，方便其他程序直接调用</li></ul></li><li><p>类变量</p><ul><li>变量不属于某个具体实例，而属于类的，所以被称为**类变量(class variables)**。</li></ul></li><li><p>实例变量</p><ul><li>属于每个对象的变量，所以属于**实例变量(instance variables)**，也被称为对象变量(object variables)。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 类变量和实例变量的代码</span><br><br><span class="hljs-comment"># 创建一个学生类</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Student</span>:</span><br><br>    <span class="hljs-comment"># number属于类变量，定义在方法外，不属于具体实例</span><br>    number = <span class="hljs-number">0</span><br><br>    <span class="hljs-comment"># 定义学生属性，初始化方法</span><br>    <span class="hljs-comment"># name和score属于实例变量，定义在方法里</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name, score</span>):</span><br>        self.name = name<br>        self.score = score<br>        <span class="hljs-comment"># 此处有错误</span><br>        number = number + <span class="hljs-number">1</span><br><br>    <span class="hljs-comment"># 定义打印学生信息的方法</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">show</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Name: &#123;&#125;. Score: &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(self.name, self.score))<br></code></pre></td></tr></table></figure><p>　　6、实例化：是一个对象事例话的实现</p><p>　　7、标识：每个对象的事例都需要一个可以唯一标识这个事例的标记</p><p>　　8、实例属性：一个对象就是一组属性的集合</p><p>　　9、事例方法：所有存取或者更新对象某个实例一条或者多条属性函数的集合。</p><p>　　10、类属性：属于一个类中所有对象的属性，</p><p>　　11、类方法：那些无须特定的对性实例就能够工作的从属于类的函数。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>OOP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Programing</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>设计模式 笔记</title>
    <link href="/2022/01/13/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/01/13/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><h3 id="设计模式介绍"><a href="#设计模式介绍" class="headerlink" title="设计模式介绍"></a>设计模式介绍</h3><ul><li><p>为什么我们要学设计模式</p><ul><li>OOP编程中的面临一般问题的解决方案</li><li>是有经验的程序员的长期试验的总结</li><li>写出的代码可维护性高; 可以提升程序员代码能力</li></ul></li><li><p>设计模式分类</p><ul><li>创建型<ul><li><strong>单例模式</strong></li><li><strong>工厂模式</strong></li><li><strong>建造者模式</strong></li><li><em>原型模式</em></li></ul></li><li>结构型<ul><li><strong>代理模式</strong></li><li><strong>桥接模式</strong></li><li><strong>装饰者模式</strong></li><li><strong>适配器模式</strong></li><li><em>门面模式</em></li><li><em>组合模式</em></li><li><em>享元模式</em></li></ul></li><li>行为型<ul><li><strong>观察者模式</strong></li><li><strong>模板模式</strong></li><li><strong>策略模式</strong></li><li><strong>职责链模式</strong></li><li><strong>迭代者模式</strong></li><li><strong>状态模式</strong></li><li><em>访问者模式</em></li><li><em>备忘录模式</em></li><li><em>命令模式</em></li><li><em>解释器模式</em></li><li><em>中介模式</em></li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Programing</category>
      
      <category>设计模式</category>
      
    </categories>
    
    
    <tags>
      
      <tag>design pattern</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>算法图解 读书笔记</title>
    <link href="/2022/01/13/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/01/13/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="算法图解读书笔记"><a href="#算法图解读书笔记" class="headerlink" title="算法图解读书笔记"></a>算法图解读书笔记</h1><p>当前进度: 15%</p><h3 id="一-算法简介"><a href="#一-算法简介" class="headerlink" title="一. 算法简介"></a>一. 算法简介</h3><ul><li><p>什么是算法</p><ul><li><p>算法是完成一组指令的任务</p></li><li><p>举例: </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">二分法<br>GPS使用的图算法<br>AI算法下围棋 <span class="hljs-selector-attr">[Alpha Go]</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>二分查找</p><ul><li><p>使用条件:  适用于有序情况[无序情况下也可以使用, 但仅限于特定问题, 待后面进行补充]</p></li><li><p>什么是二分查找</p><ul><li>在有序元素列表中使用二分法进行查找的算法</li></ul></li><li><p>二分法</p><ul><li>在有序元素中, 取中间值与待比较量进行对比的算法</li></ul></li><li><p>简单查找</p><ul><li>从头至尾挨个查找</li></ul></li><li><p>二分查找代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 二分查找的代码</span><br><span class="hljs-keyword">import</span> math<br><span class="hljs-comment"># 引入math库是为了防止出现小数的情况</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">binary_search</span>(<span class="hljs-params">listContent, item</span>):</span><br>    low = <span class="hljs-number">0</span><br>    high = <span class="hljs-built_in">len</span>(listContent) - <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">while</span> low &lt; high:<br>        mid = math.floor((low + high)/<span class="hljs-number">2</span>)<br>        guess = listContent[mid]<br>        <span class="hljs-keyword">if</span> guess == item:<br>            <span class="hljs-keyword">return</span> mid<br>        <span class="hljs-keyword">if</span> guess &gt; item:<br>            high = mid - <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            low = mid + <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><br>my_list = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>]<br><span class="hljs-comment"># binary_search(my_list, 5)</span><br><span class="hljs-built_in">print</span>(binary_search(my_list, <span class="hljs-number">10</span>))<br><br><span class="hljs-comment"># 另一种二分查找</span><br><span class="hljs-comment">#BinarySearch：find the location of the target number</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">BinarySearch</span>(<span class="hljs-params">nums:<span class="hljs-built_in">list</span>,x:<span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:</span><br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        nums: Sorted array from smallest to largest</span><br><span class="hljs-string">        x: Target number</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    left,right = <span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(nums)-<span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> left &lt;= right:<br>        mid = (left+right)//<span class="hljs-number">2</span><br>        <span class="hljs-keyword">if</span> nums[mid] == x:<br>            <span class="hljs-keyword">return</span> mid<br>        <span class="hljs-keyword">if</span> nums[mid] &lt; x:<br>            left = mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right = mid-<span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>大O表示法</p><ul><li>用于衡量算法运行的速度 [通过多项式表示, 与系数无关]  {指的是最遭情况下的运行时间}</li><li>常见复杂度<ul><li>O(1)  常数复杂度</li><li>O(logn) 对数复杂度</li><li>O(n) 线性复杂度</li><li>O(nlogn)</li><li>O(n^2)</li><li>O(n!)    旅行商问题</li></ul></li></ul></li></ul><h3 id="二-选择排序"><a href="#二-选择排序" class="headerlink" title="二.选择排序"></a>二.选择排序</h3><ul><li><p>内存的工作原理</p><ul><li>本质是存储的容器</li><li>每个容器有对应的地址</li></ul></li><li><p>数组和链表</p><ul><li>数组<ul><li>连续存储</li><li>随机读取方便 O(1)</li><li>插入,删除, 操作数O(n)</li></ul></li><li>链表<ul><li>指针指向下一个元素地址(元素之间是分开存放的)</li><li>删除,添加方便O(1)</li><li>读取O(n)</li></ul></li><li>索引: 元素的位置</li><li>操作<ul><li>插入</li><li>删除</li></ul></li></ul></li><li><p>选择排序</p><ul><li><p>思路: 从未排序部分中找到最值,拍到指定位置; 循环直到未排序部分清空</p></li><li><p>具体实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 第一种选择排序</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">select_sort</span>(<span class="hljs-params">arr</span>):</span><br>    newArr = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(arr)):<br>        smallest = find_smallest(arr)<br>        newArr.append(arr.pop(smallest))<br>    <span class="hljs-keyword">return</span> newArr<br><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">find_smallest</span>(<span class="hljs-params">arr</span>):</span><br>    smallest = arr[<span class="hljs-number">0</span>]<br>    smallest_index = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(arr)):<br>        <span class="hljs-keyword">if</span> arr[i] &lt; smallest:<br>            smallest = arr[i]<br>            smallest_index = i<br>    <span class="hljs-keyword">return</span> smallest_index<br><br><br><span class="hljs-comment"># 第二种选择排序(递归实现)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">select_sort2</span>(<span class="hljs-params">start_index, end_index, object_list</span>):</span><br>    <span class="hljs-keyword">if</span>(start_index &gt;= end_index):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;排序已完成&quot;</span>)<br>        <span class="hljs-built_in">print</span>(object_list)<br>        <span class="hljs-keyword">return</span>(object_list)<br>    <span class="hljs-keyword">else</span>:<br>        target_list= object_list[start_index: end_index+<span class="hljs-number">1</span>]<br>        target_value = <span class="hljs-built_in">min</span>(target_list)<br>        target_index = target_list.index(target_value)<br>        object_list[start_index+target_index], object_list[start_index] = object_list[start_index], object_list[start_index+target_index]<br><br>        <span class="hljs-keyword">return</span> select_sort2(start_index + <span class="hljs-number">1</span>, end_index, object_list)<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="三-递归"><a href="#三-递归" class="headerlink" title="三.递归"></a>三.递归</h3><ul><li><p>什么是递归?</p><ul><li><p>一种优雅的问题解决方法(将问题转化成基线问题和递归问题; 递归到基线问题直到解决)</p></li><li><p>Python中递归有上限</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 报错信息: RuntimeError: maximum recursion depth exceeded</span><br><br><span class="hljs-comment"># 解决方案</span><br><span class="hljs-keyword">import</span> sys  <br>sys.setrecursionlimit(<span class="hljs-number">1000000</span>) <span class="hljs-comment">#例如这里设置为一百万 </span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>递归</p><ul><li><p>基线条件 + 递归条件 (防止无限循环)</p></li><li><p>样例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 递归</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">countdown</span>(<span class="hljs-params">i</span>):</span><br>    <span class="hljs-built_in">print</span>(i)<br>    <span class="hljs-keyword">if</span> i &lt;= <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> countdown(i-<span class="hljs-number">1</span>)<br><br>countdown(<span class="hljs-number">5</span>)<br>countdown(<span class="hljs-number">5.7</span>)<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="四-快速排序"><a href="#四-快速排序" class="headerlink" title="四.快速排序"></a>四.快速排序</h3><h3 id="五-散列表"><a href="#五-散列表" class="headerlink" title="五.散列表"></a>五.散列表</h3><h3 id="六-广度优先搜索"><a href="#六-广度优先搜索" class="headerlink" title="六.广度优先搜索"></a>六.广度优先搜索</h3><h3 id="七-狄克斯特拉算法"><a href="#七-狄克斯特拉算法" class="headerlink" title="七.狄克斯特拉算法"></a>七.狄克斯特拉算法</h3><h3 id="八-贪婪算法"><a href="#八-贪婪算法" class="headerlink" title="八.贪婪算法"></a>八.贪婪算法</h3><h3 id="九-动态规划"><a href="#九-动态规划" class="headerlink" title="九.动态规划"></a>九.动态规划</h3><h3 id="十-K最近邻算法"><a href="#十-K最近邻算法" class="headerlink" title="十.K最近邻算法"></a>十.K最近邻算法</h3><h3 id="十一-接下来如何做"><a href="#十一-接下来如何做" class="headerlink" title="十一.接下来如何做"></a>十一.接下来如何做</h3>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>算法入门书</category>
      
    </categories>
    
    
    <tags>
      
      <tag>algorithm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PRML Ch2 概率分布</title>
    <link href="/2022/01/12/PRML-Ch2-%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83/"/>
    <url>/2022/01/12/PRML-Ch2-%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>PRML Ch1 绪论</title>
    <link href="/2022/01/12/PRML-Ch1-%E7%BB%AA%E8%AE%BA/"/>
    <url>/2022/01/12/PRML-Ch1-%E7%BB%AA%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="0-绪论"><a href="#0-绪论" class="headerlink" title="0. 绪论"></a>0. 绪论</h1><h3 id="什么是模式识别"><a href="#什么是模式识别" class="headerlink" title="什么是模式识别"></a>什么是模式识别</h3><ul><li>利用计算机算法自动发现数据中的规律, 以及使用规律</li></ul>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>模式识别</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
      <tag>pattern recognition</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>英语原刊翻译001 Regulators want firms to own up to climate risks</title>
    <link href="/2022/01/12/%E8%8B%B1%E8%AF%AD%E5%8E%9F%E5%88%8A%E7%BF%BB%E8%AF%91001-Regulators-want-firms-to-own-up-to-climate-risks/"/>
    <url>/2022/01/12/%E8%8B%B1%E8%AF%AD%E5%8E%9F%E5%88%8A%E7%BF%BB%E8%AF%91001-Regulators-want-firms-to-own-up-to-climate-risks/</url>
    
    <content type="html"><![CDATA[<h1 id="lt-Regulators-want-firms-to-own-up-to-climate-risks-gt-精读"><a href="#lt-Regulators-want-firms-to-own-up-to-climate-risks-gt-精读" class="headerlink" title="&lt;Regulators want firms to own up to climate risks&gt; 精读"></a>&lt;Regulators want firms to own up to climate risks&gt; 精读</h1><h3 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h3><ul><li>文章取自”<strong>三言两语杂货社</strong>“ [微信号, B站号同名]</li><li>原文是 20210313《经济学人》</li><li>绝大多数解析来自 <a href="https://www.bilibili.com/video/BV13L4y1n72X?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV13L4y1n72X?spm_id_from=333.999.0.0</a></li></ul><h3 id="当前进度-25"><a href="#当前进度-25" class="headerlink" title="当前进度 (25%)"></a>当前进度 (25%)</h3><h3 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h3><h5 id="环保"><a href="#环保" class="headerlink" title="环保"></a>环保</h5><p><strong>金融</strong></p><p><strong>监管</strong></p><hr><h3 id="开头部分"><a href="#开头部分" class="headerlink" title="开头部分"></a>开头部分</h3><h5 id="标题-Regulators-want-firms-to-own-up-to-climate-risks"><a href="#标题-Regulators-want-firms-to-own-up-to-climate-risks" class="headerlink" title="标题: Regulators want firms to own up to climate risks"></a>标题: <strong>Regulators want firms to own up to climate risks</strong></h5><h6 id="小标题-That-is-good-news-for-investors-And-for-the-planet"><a href="#小标题-That-is-good-news-for-investors-And-for-the-planet" class="headerlink" title="小标题: That is good news for investors. And for the planet?"></a>小标题: <em>That is good news for investors. And for the planet?</em></h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs English">regulator                 n.监管机构<br>own up to sth/ doing sth  承认责任, 坦白<br>he was too frightened to own up to his mistake<br><br>总体翻译: <br>监管机构想要公司们能够坦白他们的气候风险<br>这对投资者是一个好消息,但是对这个星球呢?<br></code></pre></td></tr></table></figure><h3 id="第一段"><a href="#第一段" class="headerlink" title="第一段"></a>第一段</h3><ul><li><p>America’s main financial regulator is taking an interest in climate change—and wants everyone to know. </p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">take an <span class="hljs-built_in">int</span>erest <span class="hljs-keyword">in</span>  对XX事有兴趣<br><br>总体翻译: <br>美国最大的金融监管机构目前对气候变化很感兴趣, 并且想要每个人都知道这一点<br></code></pre></td></tr></table></figure></li><li><p>The Securities and Exchange Commission (SEC) has created a task-force to examine environmental, social and governance (ESG) issues, appointed a climate tsar and said it will “enhance its focus” on climate-related disclosures for listed firms. </p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">The Securities <span class="hljs-keyword">and </span>Exchange Commission    美国证券交易委员会<br>task-force                                特别工作组<br>environmental, social <span class="hljs-keyword">and </span>governance      环境,社会,治理  [关于可持续发展的常见词]<br>climate tsar                              n. 气候顾问<br><span class="hljs-keyword">disclosure </span>    (动词: <span class="hljs-keyword">disclose </span>)           n. 披露<br>listed firm  n. 上市公司<br><br>总体翻译: <br>SEC创立了一个特别工作小组来检查<span class="hljs-string">&quot;环境, 社会, 治理&quot;</span>的问题, 任命了一个气候顾问, 表示他会<span class="hljs-string">&quot;加强他的关注&quot;</span>在上市公司的与气候相关的披露事项<br></code></pre></td></tr></table></figure></li><li><p>It looks poised to introduce, among other things, rules forcing firms to reveal how climate change or efforts to fight it may affect their business.</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">be poised <span class="hljs-built_in">to</span> <span class="hljs-built_in">do</span> sth                       准备好做....<br>Kate is poised <span class="hljs-built_in">to</span> become <span class="hljs-keyword">the</span> highest-paid supermodel <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> fashion world<br>reveal  v. 揭示<br><br>句子结构解析:<br><span class="hljs-keyword">among</span> other things是插入语<br>(climate change) <span class="hljs-keyword">or</span> (efforts <span class="hljs-built_in">to</span> fight <span class="hljs-keyword">it</span>)<br><br><span class="hljs-keyword">it</span> looks poised <span class="hljs-built_in">to</span> introduce rules<br>rules forcing firms <span class="hljs-built_in">to</span> reveal sth<br>how (A <span class="hljs-keyword">or</span> B) may affect their business.<br><br>总体翻译: <br>证监会推出了很多措施, 其中一项是推出一些规定. 规定强迫公司们披露气候变化和对抗气候变化的措施可能产生的对他们业务的影响<br></code></pre></td></tr></table></figure></li><li><p> Since September regulators in Britain, New Zealand and Switzerland have said they plan to make such climate-related disclosures mandatory. </p></li><li><p>So, too, have stock exchanges in Hong Kong, London and South Korea. The EU may follow suit.</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
      <category>原刊翻译</category>
      
    </categories>
    
    
    <tags>
      
      <tag>English</tag>
      
      <tag>Translation</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo极速入门</title>
    <link href="/2022/01/10/hexo%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <url>/2022/01/10/hexo%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="使用的技术栈"><a href="#使用的技术栈" class="headerlink" title="使用的技术栈"></a>使用的技术栈</h2><ul><li>git</li><li>Hexo</li><li>Node.js</li><li>使用的主题是fluid; [一个比较好看还有文档支持的主题, 推荐度五颗星]</li></ul><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><ol><li><p>安装git  [这里不做详细说明, 网上的介绍很多, 本篇文章专注于Hexo的使用与配置]</p><ul><li> <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></li></ul></li><li><p>安装Node.js  [同上, 自行搜索教程]</p><ul><li> <a href="https://nodejs.org/en/">https://nodejs.org/en/</a></li></ul></li><li><p>安装hexo</p><ul><li><p>安装命令</p><p><code>npm install -g hexo-cli</code></p></li></ul></li></ol><h2 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h2><ol><li><p>新建一篇文章</p><ul><li><code>hexo new &quot;博客文章名&quot;</code></li></ul></li><li><p>给文章添加tag, 分类, 背景图</p><ul><li>在生成的文件之中, 找到 开头部分; 写下具体的内容</li><li>如果有多个tag用 英文逗号 隔开; categories可以有多个层级, 类似tag使用英文逗号隔开就好</li></ul><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">tags:</span> [Programing, Blog]<br>categories: [Programing, Blog]<br>banner_img: img/TheBroads_ZH-CN0485661191_1920x1080.jpg<br></code></pre></td></tr></table></figure></li><li><p>写博客文章</p><ul><li>写markdown文件即可[可以使用未升级收费的Typora, 或者是别的markdown编辑器]</li></ul></li></ol><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><ol><li><p>部署前的准备</p><ul><li>安装插件</li></ul></li><li><p>正常部署的操作</p><ul><li><p><code>hexo g</code></p></li><li><p><code>hexo d</code></p></li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>Programing</category>
      
      <category>Blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Programing</tag>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端进阶之路 Part 0 初阶必备知识 HTML篇</title>
    <link href="/2022/01/09/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6%E4%B9%8B%E8%B7%AF-Part-0-%E5%88%9D%E9%98%B6%E5%BF%85%E5%A4%87%E7%9F%A5%E8%AF%86-HTML%E7%AF%87/"/>
    <url>/2022/01/09/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6%E4%B9%8B%E8%B7%AF-Part-0-%E5%88%9D%E9%98%B6%E5%BF%85%E5%A4%87%E7%9F%A5%E8%AF%86-HTML%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Programing</category>
      
      <category>FrontEndBasic</category>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Programing</tag>
      
      <tag>FrontEnd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Matlab教程</title>
    <link href="/2022/01/09/Matlab%E6%95%99%E7%A8%8B/"/>
    <url>/2022/01/09/Matlab%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>Matlab</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tools</tag>
      
      <tag>Matlab</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>法律学习 刑法 Part 0. 刑法复习方法论</title>
    <link href="/2022/01/01/%E6%B3%95%E5%BE%8B%E5%AD%A6%E4%B9%A0-%E5%88%91%E6%B3%95-Part-0-%E5%88%91%E6%B3%95%E5%A4%8D%E4%B9%A0%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    <url>/2022/01/01/%E6%B3%95%E5%BE%8B%E5%AD%A6%E4%B9%A0-%E5%88%91%E6%B3%95-Part-0-%E5%88%91%E6%B3%95%E5%A4%8D%E4%B9%A0%E6%96%B9%E6%B3%95%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="一-刑法复习的特点与策略"><a href="#一-刑法复习的特点与策略" class="headerlink" title="一.刑法复习的特点与策略"></a>一.刑法复习的特点与策略</h2><ul><li>学派林立<ul><li>法硕和法考的理论是不同的</li><li>法考使用的是德日的新理论, 出题人是清华大学张明楷老师</li><li>策略: <strong>选择一个老师跟到底(柏浪涛老师)</strong></li></ul></li><li>看书 &gt; 听课<ul><li>课听一遍就好</li><li><strong>书要看两遍</strong></li><li><strong>一定要做题</strong></li></ul></li><li>四本书<ul><li>精讲卷 [知识点 看两遍]</li><li>真题卷 [历年考试的题目]</li><li>背诵卷 [精华考点提炼]</li><li>模拟卷 [模拟题]</li></ul></li></ul><h2 id="二-刑法的知识体系"><a href="#二-刑法的知识体系" class="headerlink" title="二.刑法的知识体系"></a>二.刑法的知识体系</h2><ul><li>总论(50%)<ul><li>刑法论(10%)     [刑法的解释, 刑法的基本原则, 刑法的效力]</li><li>犯罪论(80%)<ul><li><strong>(客观)违法要件</strong>: 行为主体, 危害行为, 危害结果, 因果关系</li><li><strong>(客观)违法阻却事由</strong>: 正当防卫, 紧急避险, 被害人承诺</li><li><strong>(主观)责任要件</strong>: 犯罪故意, 犯罪过失, 无罪过事件, 事实认识错误</li><li><strong>(主观)责任阻却事由</strong>: 责任年龄, 责任能力, 违法认识可能性, 期待可能性</li><li><strong>犯罪形态</strong>: 犯罪预备, 犯罪未遂, 犯罪中止, 犯罪既遂</li><li><strong>共同犯罪</strong>: 共同犯罪的一般原理, 正犯, 共犯, 共同犯罪的特殊形式, 结合问题, 处罚规定</li><li><strong>罪数</strong>: 行为单数, 行为复数, 数罪</li></ul></li><li>刑罚论(10%)<ul><li><strong>刑罚的体系</strong>: 主刑, 附加刑, 非刑罚处罚措施</li><li><strong>刑罚的裁量</strong>: 量刑情节, 累犯, 自首, 立功, 数罪并罚, 缓刑</li><li><strong>刑罚的执行和消灭</strong>: 减刑, 假释, 时效, 赦免</li></ul></li></ul></li><li>分论(50%)<ul><li><strong>侵犯个人法益</strong><ul><li>人身犯罪: 生命, 身体, 性权力, 自由, 名誉, 民主权利, 婚姻家庭权力</li><li>财产犯罪<ul><li>夺取型犯罪: 抢劫罪, 抢夺罪, 挪用公款罪, 受贿罪</li><li>交付型犯罪: 诈骗罪, 抢夺罪, 盗窃罪</li><li>侵占性犯罪: 侵占罪, 职务侵占罪</li></ul></li></ul></li><li><strong>侵犯社会法益</strong><ul><li>危害公共安全犯罪</li><li>破坏经济秩序犯罪</li><li>妨害社会管理犯罪</li></ul></li><li><strong>侵犯国家法益</strong><ul><li>侵害国家职能的犯罪<ul><li>贪污贿赂犯罪: 贪污罪, 挪用公款罪, 受贿罪</li><li>渎职犯罪</li></ul></li><li>危害国家存立的犯罪<ul><li>危害国家安全的犯罪</li></ul></li></ul></li></ul></li></ul><p><strong>已完结</strong></p>]]></content>
    
    
    <categories>
      
      <category>法学</category>
      
      <category>刑法学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>jurisprudence</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>法律学习 刑法 Part I.刑法论</title>
    <link href="/2021/12/30/%E6%B3%95%E5%BE%8B%E5%AD%A6%E4%B9%A0-%E5%88%91%E6%B3%95-Part-I-%E5%88%91%E6%B3%95%E8%AE%BA/"/>
    <url>/2021/12/30/%E6%B3%95%E5%BE%8B%E5%AD%A6%E4%B9%A0-%E5%88%91%E6%B3%95-Part-I-%E5%88%91%E6%B3%95%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="刑法论"><a href="#刑法论" class="headerlink" title="刑法论"></a>刑法论</h1><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    
    <categories>
      
      <category>法学</category>
      
      <category>刑法学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>jurisprudence</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Princeton 341 Probability Part I. Introduction to Probability</title>
    <link href="/2021/12/29/Princeton-341-Probability-Part-I-Introduction-to-Probability/"/>
    <url>/2021/12/29/Princeton-341-Probability-Part-I-Introduction-to-Probability/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
      <category>概率论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
      <tag>Probability</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端进阶笔记 Part I.函数式编程</title>
    <link href="/2021/12/29/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6%E7%AC%94%E8%AE%B0-Part-I-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
    <url>/2021/12/29/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6%E7%AC%94%E8%AE%B0-Part-I-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Golang PartI Basic Grammer</title>
    <link href="/2021/12/29/Golang-PartI-Basic-Grammer/"/>
    <url>/2021/12/29/Golang-PartI-Basic-Grammer/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>每日更新</title>
    <link href="/2021/12/29/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/"/>
    <url>/2021/12/29/%E6%AF%8F%E6%97%A5%E6%9B%B4%E6%96%B0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>心理学笔记《亲密关系》I.人际关系的构成</title>
    <link href="/2021/12/29/%E5%BF%83%E7%90%86%E5%AD%A6%E7%AC%94%E8%AE%B0%E3%80%8A%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB%E3%80%8BI-%E4%BA%BA%E9%99%85%E5%85%B3%E7%B3%BB%E7%9A%84%E6%9E%84%E6%88%90/"/>
    <url>/2021/12/29/%E5%BF%83%E7%90%86%E5%AD%A6%E7%AC%94%E8%AE%B0%E3%80%8A%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB%E3%80%8BI-%E4%BA%BA%E9%99%85%E5%85%B3%E7%B3%BB%E7%9A%84%E6%9E%84%E6%88%90/</url>
    
    <content type="html"><![CDATA[<h2 id="Ch1-人际关系的构成"><a href="#Ch1-人际关系的构成" class="headerlink" title="Ch1 人际关系的构成"></a>Ch1 人际关系的构成</h2><blockquote><p>人类社会属性的核心部分正是对亲密关系的需要</p></blockquote><ul><li><p>亲密关系的性质和重要性</p><blockquote><p>本书主要关注朋友和爱人这两种亲密关系</p></blockquote><ul><li>亲密关系的性质<ul><li>亲密关系与泛泛之交至少在六个方面存在差异<ul><li><p>了解   [knowledge]   </p><p><code>(亲密的伴侣彼此之间有着广泛而私密的了解, 包括彼此的经历,爱好和心愿, 而且一般不会把这些信息透漏给别人)</code></p></li><li><p>关心   [care] </p><p><code> (亲密的伴侣彼此关系对方, 从对方身上感到关爱)</code></p></li><li><p>相互依赖性   [interdependence]  </p><p><code>(指伴侣之间彼此需要的程度和影响对方的程度)</code></p></li><li><p>相互一致性   [mutuality]  (自称”我们”而不是”我” 和 “他/她”. 自我接纳他人的程度是测量相互一致性最直接的方法)</p></li><li><p>信任   [trust]  (期待对方会善待和尊重自己; 人们相信亲密关系不会带来伤害,并期待伴侣能满足自己的要求,关注自己的幸福)</p></li><li><p>承诺   [commitment]  (承诺亲密关系,并期待亲密关系持续到地老天荒, 并为此付出时间,人力,物力)</p></li></ul></li></ul></li><li>归属需要</li></ul></li><li><p>文化的影响</p><ul><li>亲密关系变化的根源</li></ul></li><li><p>个人经历的影响</p></li><li><p>个体差异的影响</p><ul><li>性别差异</li><li>性认同差异</li><li>人格</li><li>自尊</li></ul></li><li><p>人类本性的影响</p></li><li><p>人际互动的影响</p></li><li><p>人际关系的消极面</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>心理学</category>
      
      <category>亲密关系</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Psychology</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>6.006 Introduction to Algorithm(05)</title>
    <link href="/2021/12/28/6-006-Introduction-to-Algorithm-05/"/>
    <url>/2021/12/28/6-006-Introduction-to-Algorithm-05/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>6.006 Introduction to Algorithm(04)</title>
    <link href="/2021/12/28/6-006-Introduction-to-Algorithm-04/"/>
    <url>/2021/12/28/6-006-Introduction-to-Algorithm-04/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>6.006 Introduction to Algorithm(03)</title>
    <link href="/2021/12/28/6-006-Introduction-to-Algorithm-03/"/>
    <url>/2021/12/28/6-006-Introduction-to-Algorithm-03/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>6.006 Introduction to Algorithm(02)</title>
    <link href="/2021/12/28/6-006-Introduction-to-Algorithm-02/"/>
    <url>/2021/12/28/6-006-Introduction-to-Algorithm-02/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>6.006 Introduction to Algorithm(01)</title>
    <link href="/2021/12/28/6-006-Introduction-to-Algorithm-01/"/>
    <url>/2021/12/28/6-006-Introduction-to-Algorithm-01/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>6.006 Introduction to Algorithm</title>
    <link href="/2021/12/28/6-006-Introduction-to-Algorithm/"/>
    <url>/2021/12/28/6-006-Introduction-to-Algorithm/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>LaTeX 学习笔记</title>
    <link href="/2021/12/28/LaTeX-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/12/28/LaTeX-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
      <category>LaTeX</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tools</tag>
      
      <tag>LaTeX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>西瓜书 第一章知识点整理与数学推导</title>
    <link href="/2021/12/28/%E8%A5%BF%E7%93%9C%E4%B9%A6-%E7%AC%AC%E4%B8%80%E7%AB%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86%E4%B8%8E%E6%95%B0%E5%AD%A6%E6%8E%A8%E5%AF%BC/"/>
    <url>/2021/12/28/%E8%A5%BF%E7%93%9C%E4%B9%A6-%E7%AC%AC%E4%B8%80%E7%AB%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86%E4%B8%8E%E6%95%B0%E5%AD%A6%E6%8E%A8%E5%AF%BC/</url>
    
    <content type="html"><![CDATA[<h1 id="Ch1-绪论"><a href="#Ch1-绪论" class="headerlink" title="Ch1 绪论"></a>Ch1 绪论</h1><p>[^内容扩充]: 以西瓜书为主纲, 后面会增补他人和书关于机器学习的认识与实践的说明</p><h3 id="1-1-引言-介绍什么是机器学习"><a href="#1-1-引言-介绍什么是机器学习" class="headerlink" title="1.1 引言   [介绍什么是机器学习]"></a>1.1 引言   [介绍什么是机器学习]</h3><ul><li>什么是机器学习?</li></ul><h3 id="1-2-基本术语-介绍什么是机器学习"><a href="#1-2-基本术语-介绍什么是机器学习" class="headerlink" title="1.2 基本术语   [介绍什么是机器学习]"></a>1.2 基本术语   [介绍什么是机器学习]</h3>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>machine learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>年计划</title>
    <link href="/2021/12/27/2022%E8%AE%A1%E5%88%92/"/>
    <url>/2021/12/27/2022%E8%AE%A1%E5%88%92/</url>
    
    <content type="html"><![CDATA[<h2 id="制定计划之前的反思"><a href="#制定计划之前的反思" class="headerlink" title="制定计划之前的反思"></a>制定计划之前的反思</h2><p>2021还有4天就要结束了,  在最后几天要好好回顾下反思下这一年的得与失.也为下一步做好准备.</p><p>今年直到6月底的时候节奏都是乱的, 在软通的工作确实伤害到学习的计划和热情, 原定的计划几乎没法执行直到后面换了工作才好一点.</p><p>7月之后的时间比较宽松, 但是因为想做的事太多一件也没有做成. 按照原定计划的时间安排总会被各种打断,  所以今年的任务就要尽早完成.</p><p>时间问题最多也就是客观原因, 后面的主观原因即根本原因才是今年几乎没有取得成绩的最大原因.</p><p>但是今年还是收获了很多好的习惯(早起与近乎完美的情绪控制),  还有效率也提高了.</p><p>那就继续努力解决现在的问题吧, 成为想成为的人, 保护想保护的人~</p><h2 id="今年的目标与要完成目标做的事"><a href="#今年的目标与要完成目标做的事" class="headerlink" title="今年的目标与要完成目标做的事"></a>今年的目标与要完成目标做的事</h2><p>按照优先级排序(时间待修改)</p><ol><li><p>考试1</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs css">数学<br>高数 &#123;<span class="hljs-number">1</span>-<span class="hljs-number">12</span>月&#125;<br>刷题&#123;<span class="hljs-number">1</span>-<span class="hljs-number">12</span>月&#125;             <span class="hljs-selector-attr">[0.5h/day(1~7月)]</span><span class="hljs-selector-attr">[1.5h/day(8~12月)]</span><br>微积分的本质 &#123;<span class="hljs-number">1</span>月&#125;        <span class="hljs-selector-attr">[0.5h/day]</span><br>MIT <span class="hljs-number">18.01</span> &#123;<span class="hljs-number">2</span>-<span class="hljs-number">3</span>月&#125;       <span class="hljs-selector-attr">[0.5h/day]</span><br>MIT <span class="hljs-number">18.02</span> &#123;<span class="hljs-number">4</span>-<span class="hljs-number">5</span>月&#125;       <span class="hljs-selector-attr">[0.5h/day]</span><br><br>线性代数&#123;<span class="hljs-number">1</span>-<span class="hljs-number">12</span>月&#125;<br>刷题&#123;<span class="hljs-number">1</span>-<span class="hljs-number">12</span>月&#125;             <span class="hljs-selector-attr">[0.5h/day(1~7月)]</span><span class="hljs-selector-attr">[1.5h/day(8~12月)]</span><br>线性代数的本质 &#123;<span class="hljs-number">1</span>月&#125;       <span class="hljs-selector-attr">[0.5h/day]</span><br>MIT <span class="hljs-number">18.06</span> &#123;<span class="hljs-number">2</span>-<span class="hljs-number">3</span>月&#125;        <span class="hljs-selector-attr">[1h/day]</span><br>MIT <span class="hljs-number">18.065</span> &#123;<span class="hljs-number">4</span>-<span class="hljs-number">5</span>月&#125;       <span class="hljs-selector-attr">[1h/day]</span><br><br># 某旦虽然考数二, 但是复试还有机器学习是需要概率论的,时间可以减少,次要任务<br># 概率论&#123;<span class="hljs-number">1</span>-<span class="hljs-number">12</span>月&#125;<br>#MIT <span class="hljs-number">18.0641</span> &#123;<span class="hljs-number">3</span>-<span class="hljs-number">6</span>月&#125;      <span class="hljs-selector-attr">[1h/day]</span><br>#刷题&#123;<span class="hljs-number">1</span>-<span class="hljs-number">12</span>月&#125;             <span class="hljs-selector-attr">[0.5h/day(1~7月)]</span><span class="hljs-selector-attr">[1.5h/day(8~12月)]</span><br><br><span class="hljs-number">408</span><br>数据结构      &#123;<span class="hljs-number">1</span>-<span class="hljs-number">12</span>月&#125;        <span class="hljs-selector-attr">[2h/day(1月)]</span><span class="hljs-selector-attr">[1h/day(2-12月)]</span><br>计算机组成原理 &#123;<span class="hljs-number">2</span>-<span class="hljs-number">12</span>月&#125;        <span class="hljs-selector-attr">[2h/day(2月)]</span><span class="hljs-selector-attr">[1h/day(3-12月)]</span><br>操作系统      &#123;<span class="hljs-number">3</span>-<span class="hljs-number">12</span>月&#125;        <span class="hljs-selector-attr">[2h/day(3月)]</span><span class="hljs-selector-attr">[1h/day(4-12月)]</span><br>计算机网络    &#123;<span class="hljs-number">4</span>-<span class="hljs-number">12</span>月&#125;        <span class="hljs-selector-attr">[2h/day(4月)]</span><span class="hljs-selector-attr">[1h/day(5-12月)]</span><br><br><br>英语<br>每周翻译两篇经济学人与整理<span class="hljs-selector-attr">[所有话题都要进行学习]</span> &#123;<span class="hljs-number">1</span>-<span class="hljs-number">12</span>月&#125;  <span class="hljs-selector-attr">[2h/week]</span><br>李平武 &lt;英语词根说文解字&gt; &#123;<span class="hljs-number">1</span>-<span class="hljs-number">3</span>月&#125;                      <span class="hljs-selector-attr">[2h/week]</span><br><br>政治<br>复习选择题&#123;<span class="hljs-number">7</span>-<span class="hljs-number">10</span>月&#125;                                   <span class="hljs-selector-attr">[1h/day]</span><br>复习大题&#123;<span class="hljs-number">11</span>-<span class="hljs-number">12</span>月&#125;                                    <span class="hljs-selector-attr">[1h/day]</span><br><br><br># 模式识别<br>#模式识别&#123;<span class="hljs-number">1</span>-<span class="hljs-number">12</span>月&#125;             <span class="hljs-selector-attr">[0.5h/day(1~7月)]</span><span class="hljs-selector-attr">[2h/day(8~12月)]</span><br># PRML&#123;<span class="hljs-number">1</span>-<span class="hljs-number">6</span>月&#125;                 <span class="hljs-selector-attr">[1h/day(1~6月)]</span><br>#模式识别第四版&#123;<span class="hljs-number">1</span>-<span class="hljs-number">6</span>月&#125;         <span class="hljs-selector-attr">[1h/day(1~6月)]</span><br>    <br></code></pre></td></tr></table></figure></li><li><p>考试2</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs applescript">刑法   &#123;<span class="hljs-number">1</span><span class="hljs-number">-3</span>月&#125;                                          [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]    <br>民法   &#123;<span class="hljs-number">1</span><span class="hljs-number">-3</span>月&#125;                                          [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br>理论法 &#123;<span class="hljs-number">2</span><span class="hljs-number">-4</span>月&#125;                                          [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br>刑诉   &#123;<span class="hljs-number">2</span><span class="hljs-number">-4</span>月&#125;                                          [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br>民诉   &#123;<span class="hljs-number">3</span><span class="hljs-number">-4</span>月&#125;                                          [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br>商经法  &#123;<span class="hljs-number">3</span><span class="hljs-number">-5</span>月&#125;                                         [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br>行政法  &#123;<span class="hljs-number">4</span><span class="hljs-number">-6</span>月&#125;                                         [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br>三国法  &#123;<span class="hljs-number">5</span><span class="hljs-number">-6</span>月&#125;                                         [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br></code></pre></td></tr></table></figure></li><li><p>机器学习算法</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;机器学习&gt; 周志华                    &#123;<span class="hljs-number">1</span>-<span class="hljs-number">3</span>月&#125;             <span class="hljs-selector-attr">[0.5h/day]</span>    <br>&lt;统计机器学习&gt; 李航                  &#123;<span class="hljs-number">1</span>-<span class="hljs-number">3</span>月&#125;              <span class="hljs-selector-attr">[0.5h/day]</span>    <br>林轩田<span class="hljs-selector-attr">[机器学习基石]</span>  <span class="hljs-selector-attr">[机器学习技法]</span>   &#123;<span class="hljs-number">2</span>-<span class="hljs-number">4</span>月&#125;              <span class="hljs-selector-attr">[0.5h/day]</span>    <br>shuhuai008<span class="hljs-selector-attr">[白板推导系列]</span>            &#123;<span class="hljs-number">2</span>-<span class="hljs-number">4</span>月&#125;              <span class="hljs-selector-attr">[0.5h/day]</span>    <br>苏黎世联邦理工 <span class="hljs-selector-attr">[机器学习数学基础]</span>      &#123;<span class="hljs-number">1</span>-<span class="hljs-number">2</span>月&#125;              <span class="hljs-selector-attr">[1h/day]</span><br></code></pre></td></tr></table></figure></li><li><p>算法</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">MIT<span class="hljs-selector-attr">[算法导论]</span>                      &#123;<span class="hljs-number">3</span>-<span class="hljs-number">4</span>月&#125;              <span class="hljs-selector-attr">[1h/day]</span>  <br>Princecton<span class="hljs-selector-attr">[算法(第四版)]</span>           &#123;<span class="hljs-number">5</span>-<span class="hljs-number">6</span>月&#125;              <span class="hljs-selector-attr">[1h/day]</span>  <br>LeetCode                         &#123;<span class="hljs-number">2</span>-<span class="hljs-number">6</span>月&#125;              <span class="hljs-selector-attr">[1h/day]</span> <br></code></pre></td></tr></table></figure></li><li><p>Matlab, Notion, LaTex</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Matlab能看懂他们写的程序是什么意思就行了  &#123;<span class="hljs-number">1</span>月上旬&#125;         [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br>Notion是<span class="hljs-number">2022</span>以及以后主要的笔记工具      &#123;<span class="hljs-number">1</span>月上旬&#125;         [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br>LaTex是推导公式使用的要先掌握           &#123;<span class="hljs-number">1</span>月上旬&#125;         [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br></code></pre></td></tr></table></figure></li><li><p>Python</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Python数据分析的库                    &#123;<span class="hljs-number">2</span>月上旬&#125;         [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br>Pytorch                             &#123;<span class="hljs-number">2</span>月上旬&#125;         [<span class="hljs-number">1</span>h/<span class="hljs-built_in">day</span>]  <br></code></pre></td></tr></table></figure></li><li><p>其他</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">坚持锻炼                            &#123;<span class="hljs-number">1</span><span class="hljs-number">-12</span>月&#125;           [<span class="hljs-number">0.5</span>h/<span class="hljs-built_in">day</span>]<br></code></pre></td></tr></table></figure></li></ol><h2 id="时间安排-目前到2月"><a href="#时间安排-目前到2月" class="headerlink" title="时间安排[目前到2月]"></a>时间安排[目前到2月]</h2><h6 id="一月"><a href="#一月" class="headerlink" title="一月"></a>一月</h6><ul><li>任务 [104h]<ul><li>matlab               [10h]</li><li>Notion的使用    [2h]</li><li>LaTex                 [5h]</li><li>锻炼{不可以被偶像说摆烂哦, 目标回到130+}      [6h]</li><li>408 数据结构    [24h]</li><li>刑法{第七讲}     [15h]</li><li>民法{专题10}    [8h]</li><li>算法图解{看完} [7h]</li><li>微积分的本质{看完}    [5h]</li><li>线性代数的本质{看完}[5h]</li><li>机器学习{前6章}         [6h]</li><li>统计学习方法{前4章} [6h]</li><li>前端技术整理总结      [5h]</li><li>408 数据结构              [24h]</li></ul></li></ul><h6 id="二月"><a href="#二月" class="headerlink" title="二月"></a>二月</h6><ul><li>任务 [209h]<ul><li>MIT 18.01              [15h]</li><li>高数刷题               [15h习题 + 9h试题]</li><li>锻炼{不可以被偶像说摆烂哦, 目标回到135-}      [14h]</li><li>刑法{15讲}     [14h]</li><li>民法{专题30}    [14h]</li><li>理论法{5讲}   [14h]</li><li>刑诉{5讲}       [14h]</li><li>LeetCode{简单经典题60道} [30h]</li><li>MIT 18.06             [15h]</li><li>机器学习{Ch12}         [14h]</li><li>统计学习方法{Ch14} [14h]</li><li>前端技术整理总结      [15h]</li><li>Python数据分析库     [6h]</li><li>Pytorch    [6h]</li><li>408 数据结构              [14h]</li><li>408 计算机组成原理  [14h</li><li>0.]</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>年计划</category>
      
    </categories>
    
    
    <tags>
      
      <tag>personal</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
